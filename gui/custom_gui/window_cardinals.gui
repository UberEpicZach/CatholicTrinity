
types CardinalsGridStuff { #Reusable templates for showing characters
	type window_cardinals_special_character = widget { #For showing the Pope, Preferatus, etc. Larger than nomrmal.
		allow_outside = yes
		size = {150 213}
		scale = 1.1
		
		icon = {
			parentanchor = hcenter|top
			texture = "gfx/interface/CollegeCardinals/papacy_nameplate_large_bg.dds" #texture = "gfx/interface/component_tiles/tile_title_bg_01.dds"
			alpha = 0.7
			position = {-12 -10} #don't fucking change
			text_single = {
				block "text" {text = "CARDINAL_WIND_UNIUI_POPENAME"}
				parentanchor = hcenter|vcenter
				#default_format = "#light_background"
				using = Font_Type_Flavor
				block "fontsize" { fontsize = 22 }
				#position = {0 -4}
			}
		}
		block "portrait" {portrait_head = {parentanchor = hcenter|vcenter position = {0 5} }}
		text_single = {
			parentanchor = bottom|hcenter
			position = {0 -25}
			text = "CARDINAL_WIND_UNIUI_POPENAME"
		}
	}
	type window_cardinals_portrait = portrait_head { # Normal character portrait used for Cardinals.
		# Type for changing the actual portrait
	}
	type namefail = widget {
		allow_outside = yes
		size = {150 213}
		scale = 1.2

		icon = {
			visible = "[GetScriptedGui('can_see_my_candidate_fail').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			parentanchor = hcenter|top
			texture = "gfx/interface/CollegeCardinals/papacy_nameplate_large_bg.dds"
			alpha = 0.7
			position = {-350 75} #don't change
			text_single = {
			text = candiatesoon
				parentanchor = hcenter|vcenter
				default_format = "#light_background"
				using = Font_Type_Flavor
				block "fontsize" { fontsize = 22 }
				position = {0 -4}
			}
		}
	}
	type namefail_pope = widget {
		allow_outside = yes
		size = {150 213}
		scale = 1.2

		icon = {
			visible = "[GetScriptedGui('can_see_my_candidate_pope').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			parentanchor = hcenter|top
			texture = "gfx/interface/CollegeCardinals/papacy_nameplate_large_bg.dds"
			alpha = 0.7
			position = {-350 39} #don't change
			text_single = {
			text = candiatesoonpope
				parentanchor = hcenter|vcenter
				default_format = "#light_background"
				using = Font_Type_Flavor
				block "fontsize" { fontsize = 22 }
				position = {0 -4}
			}
		}
	}
		
	type window_cardinals_character = widget { # Lists character's name and portrait
		allow_outside = yes
		size = {150 150}
		vbox = {
			margin_top = -0
			icon = {
				texture = "gfx/interface/CollegeCardinals/papacy_nameplate_small_bg.dds"
				alpha = 0.7
				text_single = {
					block "text" {text = cardinals_cardinal}
					parentanchor = hcenter|vcenter
					#default_format = "#light_background"
					using = Font_Type_Flavor
					fontsize = 20
					position = {0 -5}
				}
			}
			window_cardinals_portrait = {}
			# text_single = {
			#     text = "cardinals_cardinal3"
			# }
			text_single = {
				visible = "[Character.HasLandedTitles]"
				text = "cardinals_cardinal2"
			}
			text_single = {
				visible = "[Not(Character.HasLandedTitles)]"
				text = "cardinals_cardinal4"
			}
		}
	}
	type window_cardinal_bishop = widget { # Can be used for a non-cardinal, but is unused
		size = {300 250}
		datacontext = "[Scope.GetCharacter]"
		window_cardinals_character = {}
		window_cardinals_campaign = {}
		window_cardinals_score = {}
	}
	type window_cardinal_griditem = widget{ # Contains all the information of a single entry in the cardinals grid
		size = {299 210} 
		background = { # Show a gold border for a cardinal that has you as its beneficiary.
			texture = "gfx/interface/CollegeCardinals/tile_selected_gold.dds"
			spriteType = Corneredtiled
			spriteborder = { 6 6 }
			shaderfile = "gfx/FX/pdxgui_default.shader"
			visible = "[ObjectsEqual(Scope.Var('beneficiary').Char,GetPlayer)]"
		}
		datacontext = "[Scope.GetCharacter]"
		window_cardinals_character = {}
		window_cardinals_score = {}
	}

	type window_cardinal_fixedgrid = fixedgridbox{ # Not currently used. Can be used in place of the Dynamicgridbox
		name = "cardinal_grid"
		datamodel = "[Religion.MakeScope.GetList('cardinal_characters')]"
		datamodel_wrap = 4
		addcolumn = 300
		addrow = 245
		flipdirection = yes
		item = {
			window_cardinal_griditem = {}
		}
	}
	type window_cardinal_dynamicgrid = dynamicgridbox{ #Used
		name = "cardinal_grid"
		ignoreinvisible = yes
		datamodel = "[Religion.MakeScope.GetList('cardinal_characters')]"
		datamodel_wrap = 4
		flipdirection = yes
		item = {
			window_cardinal_griditem = {
				visible = "[Not(ObjectsEqual(Scope.GetCharacter,Religion.MakeScope.Var('preferatus_character').Char))]"
			}
		}
	}
}

types CardinalsElection {

	type window_cardinals_score = widget { # Show score for the upcoming election (Bishop-to-cardinal or cardinal-to-pope)
		size = {100 100}
		parentanchor = hcenter|vcenter
		position = { 40 0 }
		# icon = {
		#     texture = "gfx/interface/CollegeCardinals/CardinalReasonings.png"
		#     position = {30 -15}
		# }
		vote_amount_icon = {
			position = { 63 45 }
		}
		text_single = {
			position = { 64 70 }
			block "score" {text = "[GuiScope.SetRoot(Character.MakeScope).ScriptValue('cardinal_to_pope_score')|0]"}
			fontsize = 25
		}
		tooltipwidget = {cardinal_score_breakdown_tooltip = {}}
	}
	type window_cardinals_campaign = widget { # Show much money has been invested in this character's election campaign
		size            = {50 30}
		position        = {-10 -10}
		parentanchor    = left|top
		vbox = {
			spacing = -40
			position = {-35 -5}
			icon = {texture = "gfx/interface/CollegeCardinals/Coins.png"}
			text_single = {
				text = "[Character.MakeScope.Var('cardinal_campaign_contribution').GetValue|0]"
				#"[GuiScope.SetRoot(Character.MakeScope).ScriptValue('cardinal_money_bonus')|0]"
				fontsize = 25
			}
		}
	} 
	type window_cardinals_invest = button { # Add x gold to the character's election fund
		size = { 100 75 }
		parentanchor = left|bottom
		icon = {
			texture = "gfx/interface/CollegeCardinals/Invest.png"
		}
		tooltip = "window_cardinals_invest_tooltip"
		enabled = "[GetScriptedGui('invest_in_cardinal').IsValid(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
		onclick = "[GetScriptedGui('invest_in_cardinal').Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
		alwaystransparent = no
		layoutpolicy_vertical = expanding
	}
	type window_cardinals_divest = button { # Retrieve 50% of your donation from the character's election fund
		size = { 100 75 }
		parentanchor = right|bottom
		icon = {
			texture = "gfx/interface/CollegeCardinals/Divest.png"
		}
		tooltip = "window_cardinals_divest_tooltip"
		enabled = "[GetScriptedGui('divest_from_cardinal').IsValid(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
		onclick = "[GetScriptedGui('divest_from_cardinal').Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
		alwaystransparent = no
		layoutpolicy_vertical = expanding
	}
	type window_cardinals_invest_divest = widget { # Show both invest and divest buttons
		size = { 200 100 }
		parentanchor = hcenter|bottom
		allow_outside = yes
		window_cardinals_invest = {}
		window_cardinals_divest = {}
	}
}

types Cardinals {
    type window_cardinals_open_button = button {
        size = { 100 100 }
        datacontext = "[Faith.GetReligion]"
        visible = "[Faith.MakeScope.Var('uses_cardinal_module').IsSet]"
        icon    = {texture = "gfx/interface/CollegeCardinals/HouseofCardinalsButton.png"}
        raw_tooltip = "#T The [collegeofcardinals|E]#!."
        onclick = "[GetVariableSystem.Toggle('window_cardinals')]"
        onclick = "[GetScriptedGui('refresh_cardinal_characters').Execute(GuiScope.SetRoot(Religion.MakeScope).End)]"
        onclick = "[GetScriptedGui('cardinal_music').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
        alwaystransparent = no
        layoutpolicy_vertical = expanding
    }


	type window_cardinals = window {
		state = {
			name = _show
			position = { 0 0 }
			on_start = "[GetVariableSystem.Set( 'church_view_tabs', 'holychurch' )]"
			on_start = "[GetVariableSystem.Set( 'hide_bottom_left_HUD', 'true' )]"
	
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
		}
	
		state = {
			name = _hide
			position = { -60 0 }
			on_start = "[GetVariableSystem.Clear( 'hide_bottom_left_HUD' )]"
			#on_start = "[GetVariableSystem.Clear( 'window_appoint_successor_theocracy' )]"
			#on_start = "[SetMapMode( 'realms' )]"
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
		}

		datacontext = "[Faith.GetReligion]"
		scale = 0.8
		layer = top
		#parentanchor = vcenter|hcenter
		#widgetanchor = right|center
		widgetanchor = left|vcenter
		parentanchor = right|vcenter
		#allow_outside = yes
		#movable = yes
		#position= {10% 10%}
		size    = { 1250 1150 }

		visible = "[And(Faith.MakeScope.Var('uses_cardinal_module').IsSet,GetVariableSystem.Exists('window_cardinals'))]"
		#alwaystransparent = no
		background = {
			alpha = 0.5
			fittype = end
			texture = "[Illustration.GetTexture( FaithWindow.GetFaith.MakeScope )]"

			# modify_texture = {
			#     mirror = vertical
			#     blend_mode = alphamultiply
			#     texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
			# }
		}
		#alpha = 0.5
		#layoutpolicy_vertical   = expanding
		#layoutpolicy_horizontal = expanding
		using = Window_Background
		using = Window_Decoration_Spike


		vbox = {
			using = Window_Margins
		
            ### Tabs
            hbox = {
                layoutpolicy_horizontal = expanding
                name = "tabs"

				button_tab = {
                    layoutpolicy_horizontal = expanding
                    onclick = "[GetVariableSystem.Set( 'church_view_tabs', 'holychurch' )]"
                    down = "[GetVariableSystem.HasValue( 'church_view_tabs', 'holychurch' )]"
                    text = "HOLY_CHURCH"
                    default_format = "#low"

                    using = tooltip_below
                }
				
				button_tab = {
                    layoutpolicy_horizontal = expanding
                    onclick = "[GetVariableSystem.Set( 'church_view_tabs', 'collegeofcardinals' )]"
                    onclick = "[SetMapMode('religions')]"
                    down = "[GetVariableSystem.HasValue( 'church_view_tabs', 'collegeofcardinals' )]"
                    text = "COLLEGE_OF_CARDINALS"
                    default_format = "#low"

                    using = tooltip_below
				}
            }

			header_pattern = {
				visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'collegeofcardinals' )]"
				layoutpolicy_horizontal = expanding

				minimumsize = { 100% 10% }

				blockoverride "header_text"
				{
					text = cardinals_college
				}

				# button = {
				#     parentanchor = right
				#     size = { 35 35 }
				#     position = { -45 5 }
				#     texture = "gfx/interface/icons/flat_icons/replace.dds"
				#     tooltip = "HRT_window_refresh_tt"
				#     using = Master_Button_Modify_Texture
				#     onclick = "[GetScriptedGui('HRT_abort_sgui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				#     onclick = "[GetScriptedGui('HRT_update_candidati_sgui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				# }

				# button = {
				#     visible = "[GetScriptedGui('HRT_formed_sgui').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				#     parentanchor = right
				#     size = { 35 35 }
				#     position = { -90 5 }
				#     texture = "gfx/interface/icons/flat_icons/election_window.dds"
				#     tooltip = "HRT_window_election_tt"
				#     using = Master_Button_Modify_Texture
				#     onclick = "[GetScriptedGui('HRT_open_election_sgui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				# }

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Toggle('window_cardinals')]"
					onclick = "[GetScriptedGui('refresh_cardinal_characters').Execute(GuiScope.SetRoot(Religion.MakeScope).End)]"
				}
			}

			expand = {}
		}
		
		#Special Characters; Pope and Preferatus
		widget = {
			visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'collegeofcardinals' )]"
			position = { 10% 4%}
			size = {80% 30%}
			hbox = {
				parentanchor = top|hcenter
				window_cardinals_special_character = {
					datacontext = "[FaithWindow.GetFaith.GetReligiousHead]"
					blockoverride "text" { raw_text = cardinals_pope}
					blockoverride "fontsize" { fontsize = 25 }
				}
				window_cardinals_special_character = {
					datacontext = "[Religion.MakeScope.Var('preferatus_character').GetCharacter]"
					blockoverride "text"    {   raw_text = cardinals_preferatus}
					blockoverride "portrait" {  window_cardinals_portrait = { parentanchor = hcenter|vcenter position = { -13 3 } } } 
					blockoverride "fontsize" { fontsize = 26 }
					window_cardinals_score      = {position = { 40 0 }}
				}
			}
		}

		widget = { #added Scrollbox
			visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'collegeofcardinals' )]"
			size = {100% 45%}
			#allow_outside = yes
			position = {0 300}
			scrollarea = {
				background = {
					using = Background_Area_Border
				}
				position = {25 35}
				maximumsize = { -1 430 }
				autoresizescrollarea = yes
				scrollbar_vertical = {
					using = Scrollbar_Vertical
				}
				scrollbarpolicy_horizontal = always_off
				#allow_outside = yes
				scrollwidget = {
					#allow_outside = yes
					#widget = {size = {0 50}}
					window_cardinal_dynamicgrid = {
						parentanchor = top|left
						#layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
					}
				}
			}
		}

		widget = {
			visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'collegeofcardinals' )]"
			vbox = {
				using = Window_Margins
				size = { 100% 50 }
                position = { 0 -48% }
				header_pattern_interaction = {
				    layoutpolicy_horizontal = expanding
				    #minimumsize = { 100% 10% }
                    position = { 0 0 }
				    #parentanchor = top|hcenter
				    fontsize = 28
				    blockoverride "header_text"
				    {
				        text = cardinals_candidacy
				    }
				}               
			}
			size = {100% 32%}
			parentanchor = bottom|left
			allow_outside = yes
			window_cardinals_special_character = {
				parentanchor = vcenter|left
				position = {250 0}
				visible = "[GetScriptedGui('can_see_my_candidate').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				datacontext = "[GetPlayer.MakeScope.Var('cardinal_player_candidate').GetCharacter]"
				blockoverride "text"    {   raw_text = cardinals_my_candidate}
				blockoverride "portrait" {  window_cardinals_portrait = { parentanchor = hcenter|vcenter }}
				blockoverride "score" {raw_text = "[GuiScope.SetRoot(Character.MakeScope).ScriptValue('bishop_to_cardinal_score')|0]"}
				blockoverride "fontsize" { fontsize = 26 }
				window_cardinals_campaign = {position = { -25 50 }}
				window_cardinals_score = {position = { 50 -5 }}
				window_cardinals_invest_divest = {
					parentanchor = bottom|hcenter
					position = { -10 15 }
				}
			}
			# namefail = {
			# 	size = { 100% 32 }
			# 	icon = {
			# 		visible = "[GetScriptedGui('can_see_my_candidate_fail').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			# 		texture = "gfx/interface/CollegeCardinals/papacy_nameplate_small_bg.dds"
			# 		text_single = {
			# 			block "text" {text = candiatesoon}
			# 			parentanchor = hcenter|vcenter
			# 			default_format = "#light_background"
			# 			using = Font_Type_Flavor
			# 			fontsize = 20
			# 			position = {-100 0 }
			# 		}
			# 	}    
			# }
			# namefail_pope = {
			# 	size = { 100% 32 }
			# 	icon = {
			# 		visible = "[GetScriptedGui('can_see_my_candidate_pope').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			# 		texture = "gfx/interface/CollegeCardinals/papacy_nameplate_small_bg.dds"
			# 		text_single = {
			# 			block "text" {text = candiatesoon}
			# 			parentanchor = hcenter|vcenter
			# 			default_format = "#light_background"
			# 			using = Font_Type_Flavor
			# 			fontsize = 20
			# 			position = {-100 0 }
			# 		}
			# 	}    
			# }
			hbox = {
				name = "change_candidate"
				layoutpolicy_horizontal = expanding
				visible = "[GetScriptedGui('can_see_my_candidate').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				visible_at_creation = yes
				position = {-450 -90 }
				margin = { 0 5 }
				#raw_tooltip = "#Change Cardinal Candidate"
				button_round = {
					name = "change_beneficiary"
					text = "GHW_CHANGE_BENEFICIARY"
					onclick = "[OpenCharacterInteraction( 'select_cardinal_candidate_interaction', GetPlayer )]"
					raw_tooltip = "#T Change Cardinal Candidate#!"

					button_change = {
						alwaystransparent = yes
						parentanchor = center
					}
				}
			}
			window_cardinals_special_character = {
				parentanchor = vcenter|right
				position = {-220 0}
				datacontext = "[Religion.MakeScope.Var('predicted_cardinal').GetCharacter]"
				blockoverride "text"    {   raw_text = cardinals_predictus}
				blockoverride "portrait" {  window_cardinals_portrait = { parentanchor = hcenter|vcenter }}
				blockoverride "score" {text = "[GuiScope.SetRoot(Character.MakeScope).ScriptValue('bishop_to_cardinal_score')|0]"}
				blockoverride "fontsize" { fontsize = 26 }
				window_cardinals_campaign   = {position = { -25 50 }}
				window_cardinals_score      = {position = { 50 -5 }}
			}
		}
		#expand = {}
	}
}

types uniuitrinitytypes {
    type UniUI_Trinity_window_faith_widget_doctrine_item = container {
        widget_doctrine_item = {
            visible = "[Faith.HasDoctrineByKey( 'doctrine_independent_papacy_head' )]"
            blockoverride "background" {}

            blockoverride "doctrine_icon"
            {
                texture = "[GetDoctrine( 'doctrine_independent_papacy_head' ).GetIcon]"
            }

            blockoverride "wdi_context"
            {
                datacontext = "[GetDoctrine('doctrine_independent_papacy_head')]"
                datacontext = "[Faith]"
            }
        }
        widget_doctrine_item = {
            visible = "[And(Faith.HasDoctrineByKey( 'doctrine_spiritual_head' ), Not(Faith.HasDoctrineByKey( 'doctrine_independent_papacy_head' )))]"
            blockoverride "background" {}

            blockoverride "doctrine_icon"
            {
                texture = "[GetDoctrine( 'doctrine_spiritual_head' ).GetIcon]"
            }

            blockoverride "wdi_context"
            {
                datacontext = "[GetDoctrine('doctrine_spiritual_head')]"
                datacontext = "[Faith]"
            }
        }
    }
}