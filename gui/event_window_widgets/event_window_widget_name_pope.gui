# Event window widget to rename a child (intended to be used at birth)
# Required controller: name_character

vbox = {
	name = "event_window_widget_name_pope"
	layoutpolicy_horizontal = expanding
	minimumsize = { 240 -1 }
	ignoreinvisible = yes
	margin = { 5 0 }
	margin_bottom = 5
	spacing = 3

	datacontext = "[EventWindowWidgetNameCharacter.GetCharacter]"

	editbox_standard = {
		size = { 240 30 }
	
		blockoverride "editbox_properties" 
		{
		    name = "no_name_needed"
		    text = "[EventWindowWidgetNameCharacter.GetCurrentName]"
			ontextedited = "[EventWindowWidgetNameCharacter.OnEditCurrentName]"

			state = {
				name = "pope_name_refresh"
				next = "name_refresh"
				duration = 0.001
				on_start = "[GetScriptedGui('random_pope_male_name').Execute(GuiScope.SetRoot(EventWindowWidgetNameCharacter.GetCharacter.MakeScope).End)]"
				on_finish = "[EventWindowWidgetNameCharacter.SetCurrentNameCultural( EventWindowWidgetNameCharacter.GetCharacter.GetFirstNameNoTooltip)]"
			}
		}
	}

	hbox = {
		event_button_round = {
			visible = "[And( Not( Character.IsFemale ), GetScriptedGui('this_is_the_pope').IsShown(GuiScope.SetRoot(EventWindowWidgetNameCharacter.GetCharacter.MakeScope).End))]" #
			onclick = "[PdxGuiTriggerAllAnimations('pope_name_refresh')]"
			tooltip =  "event_window_widget_name_child_random_saint_name"
			using = tooltip_se
	
			highlight_icon = {
				texture = "gfx/interface/CollegeCardinals/HouseofCardinalsButton.png"
				parentanchor = center
				size = { 35 35 }
			}
		}
	
		hbox = {
			layoutpolicy_vertical = expanding
			margin = { 10 0 }
			
			divider_light = {
				layoutpolicy_vertical = expanding
			}
		}
	}
}

types EventWindowWidgetNameChild
{
	type event_widget_name_child_option = button_standard_list {
		layoutpolicy_horizontal = expanding
		
		onclick = "[PdxGuiTriggerAllAnimations('name_refresh')]"
		
		background = {
			using = Background_Area
		}
	}

	type event_button_round = button_round {
		size = { 44 44 }
	}
}
