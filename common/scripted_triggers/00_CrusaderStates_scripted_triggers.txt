# vassal_trigger = {
# 	any_vassal = {
# 		limit = {
# 			save_temporary_scope_as = tmp_vassal
# 			any_claim = {
# 				explicit = yes # Whichever
# 				pressed = no # Whichever
# 				tier = tier_county
# 				is_neighbor_to_realm = scope:tmp_vassal
# 				holder.liege = prev.liege
# 				save_temporary_scope_as = tmp_county
# 			}
# 			}
# 			save_temporary_scope_as = vassal_1
# 			random_claim = {
# 				explicit = yes # Whichever
# 				pressed = no # Whichever
# 				tier = tier_county
# 				is_neighbor_to_realm = scope:vassal_1
# 				holder.liege = scope:vassal_1.liege
# 				save_scope_as = county
# 				holder = {save_temporary_scope_as = vassal_2}
# 			}
# 	}
# }

CrusaderStates_trigger = {
	AND = {
		exists = faith.great_holy_war
		faith.great_holy_war = { has_pledged_attacker = root }
		#NOT = { root = root.faith.great_holy_war.ghw_war_declarer } #Not for the Caliph himself.
		exists = ghw_beneficiary
	}
	exists = var:CrusaderState_variable
	has_variable = CrusaderState_variable
}


KoH_religiousflavour_814_duchy_trigger = {
	location = {
		any_army_in_location = { 
			army_owner = root
			exists = army_commander
			army_commander = {
				NOR = {
					has_trait = crusader_king
					has_trait = faith_warrior
				}
			}
			location = { save_temporary_scope_as = army_location}
		}
	}
	any_character_war = {
		OR = {
			using_cb = undirected_great_holy_war
			using_cb = directed_great_holy_war
		}
		any_war_defender = {
			any_realm_province = {
				this = scope:army_location #Any province within it.
				barony = {
					exists = holder
					holder = { #The province's owner must also be part of the GHW on the opposite side.
						OR = {
							any_character_war = {
								OR = {
									using_cb = undirected_great_holy_war
									using_cb = directed_great_holy_war
								}
								is_defender = prev
							}
							any_liege_or_above = {
								any_character_war = {
									OR = {
										using_cb = undirected_great_holy_war
										using_cb = directed_great_holy_war
									}
									is_defender = prev
								}
							}
						}
					}
				}
			}
		}
	}
}