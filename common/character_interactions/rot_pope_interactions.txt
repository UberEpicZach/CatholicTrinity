#Updated to 1.7
rot_make_antipope_interaction = {
	category = interaction_category_religion

	common_interaction = yes

	desc = rot_make_antipope_interaction_desc

	is_shown = {
		scope:actor.faith = scope:recipient.faith
		scope:actor.faith = {
			has_doctrine = doctrine_independent_papacy_head
			NOT = { 
				religious_head = scope:actor 
				religious_head = scope:recipient 
			}
		}
		scope:recipient = {
			OR = {
				has_government = theocracy_government
				is_theocratic_lessee = yes
			}
			is_adult = yes
		}
		scope:actor = {
			highest_held_title_tier >= tier_duchy
			NOT = { has_variable = rot_antipope_of_ruler }
		}
	}
	

	is_valid_showing_failures_only = {
		scope:recipient = {
			NOT = {
				has_trait = incapable
				has_trait = excommunicated
			}
			trigger_if = {
				limit = {
					has_government = theocracy_government
				}
				is_vassal_of = scope:actor 
			}
			trigger_else = {
				scope:actor = {
					is_liege_or_above_of = prev
				}
			}
		}
		scope:actor = {
			is_independent_ruler = yes
		}
		scope:actor.faith.religious_head = {
			NOT = { is_vassal_of = scope:actor }
		}
	}

	#force_notification = yes
	#notification_text = religious_interaction.1024
	#answer_accept_key = religious_interaction.1024.positive

	ai_accept = {
		base = -50
			
		modifier = {
			desc = ROT_MAKE_ANTIPOPE_IS_DUKE
			add = -25
			scope:actor = {
				highest_held_title_tier = tier_duchy
			}
		}

		modifier = {
			desc = ROT_MAKE_ANTIPOPE_ANTIPOPE_IS_EXISTS
			add = -50
			scope:actor.faith = {
				has_variable_list = rot_antipopes
				variable_list_size = { name = rot_antipopes value > 0 } 
			}
		}

		opinion_modifier = {
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 1
			min = 0
		}
		opinion_modifier = {
			who = scope:recipient
			opinion_target = scope:actor.faith.religious_head #Excommunication target
			multiplier = -1
		}
		modifier = {
			add = -100
			scope:recipient = {
				opinion = {
					value < 0
					target = scope:actor #Excommunication target
				}
			}
			desc = ROT_MAKE_ANTIPOPE_NEGATIVE_OPINION
		}
		modifier = {
			add = {
				add = -10
				multiply = scope:actor.faith.religious_head.num_virtuous_traits
			}
			scope:actor.faith.religious_head.num_virtuous_traits > 0
			desc = ROT_MAKE_ANTIPOPE_VIRTUES
		}
		modifier = {
			add = {
				add = 10
				multiply = scope:actor.faith.religious_head.num_sinful_traits
			}
			scope:actor.faith.religious_head.num_sinful_traits > 0
			desc = ROT_MAKE_ANTIPOPE_SINS
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_PARAGON
			add = 15
			scope:actor = {
				has_trait = paragon
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONSECRATED_BLOOD
			add = 5
			scope:actor = {
				has_trait = consecrated_blood
			}
		}
		modifier = {
			desc = ROT_MAKE_ANTIPOPE_IS_AMBITIOUS
			add = 50
			scope:recipient = {
				has_trait = ambitious
			}
		}
		modifier = {
			desc = ROT_MAKE_ANTIPOPE_IS_CONTENT
			add = -50
			scope:recipient = {
				has_trait = content
			}
		}
		modifier = {
			desc = ROT_MAKE_ANTIPOPE_IS_CARDINAL
			add = -10
			scope:recipient = {
				OR = {
					has_trait = cardinal_priest
					has_trait = cardinal_bishop
					has_trait = cardinal_archbishop
				}
			}
		}
		modifier = {
			desc = ROT_MAKE_ANTIPOPE_IS_HUMBLE #ADD LOC
			add = -25
			scope:recipient = {
				has_trait = humble
			}
		}
		modifier = {
			desc = ROT_MAKE_ANTIPOPE_IS_ARROGANT #ADD LOC
			add = 25
			scope:recipient = {
				has_trait = arrogant
			}
		}
		modifier = {
			desc = ROT_MAKE_ANTIPOPE_IS_BRAVE #ADD LOC
			add = 10
			scope:recipient = {
				has_trait = brave
			}
		}
		modifier = {
			desc = ROT_MAKE_ANTIPOPE_IS_CRAVEN #ADD LOC
			add = -10
			scope:recipient = {
				has_trait = craven
			}
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5

	on_accept = {
		scope:recipient = {
			if = {
				limit = { 
					is_theocratic_lessee = yes
					NOT = { is_courtier_of = scope:actor }
				}
				scope:actor = { 
					add_courtier = prev
				}
			}
			if = {
				limit = { 
					OR = {
						has_trait = cardinal_priest
						has_trait = cardinal_bishop
						has_trait = cardinal_archbishop
					}
				}
				if = { limit = { has_trait = cardinal_priest } remove_trait = cardinal_priest }
				if = { limit = { has_trait = cardinal_bishop } remove_trait = cardinal_bishop }
				if = { limit = { has_trait = cardinal_archbishop } remove_trait = cardinal_archbishop }
				remove_cardinal = yes
				promote_new_cardinal = yes
				update_cardinal_window = yes
				update_preferatus = yes
			}
		}
		scope:actor = {
			add_piety = massive_piety_loss
			#trigger_event = {
			# 	id = religious_interaction.1022
			#}
			faith.religious_head = {
				add_opinion = {
					modifier = rot_creator_of_antipope
					target = scope:actor
				}
			}
		}
		rot_create_antipope = {
			ANTIPOPE = scope:recipient
			CREATOR = scope:actor
		}
	}

	on_decline = {
		scope:actor = {
			#Letter event to inform character the pope refused their request.
			#trigger_event = {
			#	id = religious_interaction.1023
			#}
		}
	}
	
	#AI will do
	
	ai_potential = {
		is_adult = yes
		piety >= major_piety_value
	}
	
	ai_target_quick_trigger = {
		adult = yes
	}

	ai_targets = {
		ai_recipients = scripted_relations
	}
	
	ai_frequency = 72

	ai_will_do = {
		base = 10

		ai_value_modifier = { # +50 to -50
			who = scope:actor
			ai_compassion = 0.5
		}
		
		modifier = {
			factor = 0
			scope:recipient = { 
				NOR = {
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
					is_allied_to = scope:actor
				}
			}
		}
	}
}
# COMMUNION TENET #Updated to 1.7
excommunicate_interaction = {
	category = interaction_category_hostile
	common_interaction = yes #suppress error

	desc = excommunicate_interaction_desc

	is_shown = {
		scope:actor.faith = {
			has_doctrine = tenet_communion
		}
		NOT = {
			scope:recipient = {
				this = scope:actor
				has_trait = excommunicated
			}
			scope:recipient = scope:actor
		}
		NOT = {
			scope:recipient = {
				has_trait = excommunicated
			}
		}
		trigger_if = {
			limit = {
				scope:actor.faith = { 
					OR = {
						has_doctrine = doctrine_spiritual_head 
					}
				}
			}
			scope:actor = scope:actor.faith.religious_head
			scope:actor.faith = scope:recipient.faith
		}

		trigger_else_if = {
			limit = {
				scope:actor.faith = { AND = { has_doctrine = doctrine_independent_papacy_head has_variable_list = rot_antipopes } }
			}
			scope:actor.faith = scope:recipient.faith
			rot_is_pope_of_target_trigger = { 
				TARGET = scope:recipient
				POPE = scope:actor 
			}
		}

		trigger_else = {
			scope:actor = scope:actor.faith.religious_head
			scope:actor.faith = {
				this = scope:recipient.faith
				has_doctrine = tenet_communion
			}

			NOT = {
				scope:recipient = {
					has_trait = excommunicated
				}
			}

			NOT = { #Don't do this to yourself
				scope:recipient = scope:actor 
			}
		}
	}

	is_valid_showing_failures_only = {
		NOR = {
			scope:recipient = {
				has_character_modifier = excommunication_recently_lifted
			}
			AND = {
				exists = scope:actor.faith.great_holy_war
				scope:actor.faith.great_holy_war = {
					has_pledged_attacker = scope:recipient
				}
			}
		}
		scope:recipient = {
			age >= 12
		}
		scope:actor = {
			piety >= major_piety_value
		}
		scope:actor = {
			custom_description = {
				text = "hof_interaction_unreformed_faith"
				NOT = {
					faith = { has_doctrine_parameter = unreformed }
				}
			}
		}
		scope:recipient = { NOT = { has_strong_hook = scope:actor } }
	}

	auto_accept = yes
	force_notification = yes
	notification_text = religious_interaction.1021
	#answer_accept_key = religious_interaction.1000.strong_negative

	on_accept = {
		scope:actor = {
			add_piety = -500
			add_prestige = -1000
			hidden_effect = {
				send_interface_toast = {	
					title = excommunicate_interaction_desc.tt
					left_icon = scope:recipient
					scope:recipient = {
						show_as_tooltip = { add_trait = excommunicated }
					}
				}
			}
		}
		excommunicate_character = {
			REQUESTING_CHARACTER = scope:actor
			TARGET_CHARACTER = scope:recipient
		}

		scope:recipient = {
			hidden_effect = { #Nudge towards rivalry
				if = {
					limit = {
						NOR = {
							has_relation_rival = scope:actor
							has_relation_potential_rival = scope:actor
						}
					}
					set_relation_potential_rival = scope:actor
				}
			}
		}
	}
	
	#AI will do
	
	ai_potential = {
		is_adult = yes
		piety >= major_piety_value
	}
	
	ai_target_quick_trigger = {
		adult = yes
	}

	ai_targets = {
		ai_recipients = scripted_relations
		ai_recipients = primary_war_enemies
	}
	
	ai_frequency = 36

	ai_will_do = {
		base = 50

		ai_value_modifier = { # +50 to -50
			who = scope:actor
			ai_vengefulness = 0.5
		}
		
		modifier = {
			factor = 0
			scope:recipient = {
				NOR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
	}
}
#Updated to 1.7
request_excommunication_interaction = {
	category = interaction_category_hostile
	icon = excommunication

	desc = request_excommunication_interaction_desc
	redirect = {
		if = {
			limit = {
				scope:actor.faith = { AND = { has_doctrine = doctrine_independent_papacy_head has_variable_list = rot_antipopes } }	
			}
			rot_get_pope_of_target = {
				TARGET = scope:recipient
			}
			if = {
				limit = {
					exists = scope:pope_of_target
				}
				scope:recipient = {
					save_scope_as = secondary_recipient
				}
				scope:pope_of_target = {
					save_scope_as = recipient
				}
			}
		}
		else_if = {
			limit = {
				exists = scope:actor.faith.religious_head
			}
			scope:recipient = {
				save_scope_as = secondary_recipient
			}
			scope:actor.faith.religious_head = {
				save_scope_as = recipient
			}
		}
		if = {
			limit = {
				scope:actor = {
					removingvariableeffecttrigger = yes
				}
			}
			scope:actor = {
				removingvariableeffect = yes
			}
		}
		if = {
			limit = {
				scope:secondary_recipient = {
					removingvariableeffecttrigger = yes
				}
			}
			scope:secondary_recipient = {
				removingvariableeffect = yes
			}
		}
		if = {
			limit = {
				scope:actor = {
					faith = faith:catholic
				}
			}
			scope:actor.faith = {
				every_faith_ruler = {
					limit = { 
						OR = {
							has_trait = cardinal_priest
							has_trait = cardinal_bishop
							has_trait = cardinal_archbishop
						}
						faith = scope:actor.faith
						top_liege = scope:actor
					}
					if = {
						limit = {
							scope:actor = {
								NOT = { removingvariableeffecttrigger = yes }
							}
						}
						scope:actor = {
							setingvariableeffect = yes
						}
					}
					else = {
						scope:actor = {
							changingvariableeffect = yes
						}
					}
				}
				every_faith_ruler = {
					limit = { 
						OR = {
							has_trait = cardinal_priest
							has_trait = cardinal_bishop
							has_trait = cardinal_archbishop
						}
						faith = scope:secondary_recipient.faith
						top_liege = scope:secondary_recipient
					}
					if = {
						limit = {
							scope:secondary_recipient = {
								NOT = { removingvariableeffecttrigger = yes }
							}
						}
						scope:secondary_recipient = {
							setingvariableeffect = yes
						}
					}
					else = {
						scope:secondary_recipient = {
							changingvariableeffect = yes
						}
					}
				}
			}
		}	
	}

	notification_text = RELIGIOUS_HEAD_REQUEST_EXCOMMUNICATION

	is_shown = {
		exists = scope:secondary_recipient
		NOR = {
			scope:actor = scope:secondary_recipient
			scope:actor.faith.religious_head = scope:actor
			scope:actor.faith.religious_head = scope:secondary_recipient
		}
		scope:actor.faith = {
			OR = {
				AND = {
					exists = religious_head
					this = scope:secondary_recipient.faith
				}
			}
			has_doctrine = tenet_communion
		}
		# NAND = {
		# 	scope:actor.faith = {
		# 		has_doctrine = doctrine_temporal_papacy_head
		# 	}
		# 	scope:secondary_recipient = {
		# 		highest_held_title_tier >= tier_kingdom
		# 	}
		# }

		trigger_if = {
			limit = {
				scope:actor.faith = { has_doctrine = doctrine_independent_papacy_head }
			}
			scope:secondary_recipient = {
				NOT = { has_trait = rot_antipope }
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			piety >= massive_piety_value
		}
		scope:secondary_recipient = { #Excommunication target
			NOT = { has_trait = excommunicated }
			age >= 12
		}
		scope:actor = {
			custom_description = {
				text = "hof_interaction_unreformed_faith"
			}
		}
		scope:recipient = { is_busy_in_events_localised = yes }
		scope:secondary_recipient = { NOT = { has_strong_hook = scope:actor } }
	}

	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = excommunication_hook
		localization = EXCOMMUNICATION_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:excommunication_hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	ai_accept = {
		base = -50
			
		modifier = {
			scope:excommunication_hook = yes
			add = 50
			desc = SCHEME_WEAK_HOOK_USED
		}
		opinion_modifier = {
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 1.5
		}
		opinion_modifier = {
			who = scope:recipient
			opinion_target = scope:secondary_recipient #Excommunication target
			multiplier = -1
			min = 0
		}
		modifier = {
			add = -100
			scope:recipient = {
				opinion = {
					value > 0
					target = scope:secondary_recipient #Excommunication target
				}
			}
			desc = EXCOMMUNICATION_0_OPINION
		}
		modifier = {
			add = {
				add = -10
				multiply = scope:secondary_recipient.num_virtuous_traits
			}
			scope:secondary_recipient.num_virtuous_traits > 0
			desc = EXCOMMUNICATION_VIRTUES
		}
		modifier = {
			add = {
				add = 10
				multiply = scope:secondary_recipient.num_sinful_traits
			}
			scope:secondary_recipient.num_sinful_traits > 0
			desc = EXCOMMUNICATION_SINS
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_PARAGON
			add = 15
			scope:actor = {
				has_trait = paragon
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONSECRATED_BLOOD
			add = 5
			scope:actor = {
				has_trait = consecrated_blood
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONSECRATED_BLOOD
			add = 5
			scope:actor = {
				has_trait = consecrated_blood
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONCLAVE_INFLUENCE_ACTOR
			add = {
				add = 10
				multiply = scope:actor.var:rot_conclave_influence
			}
			scope:actor = {
				has_variable = rot_conclave_influence
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONCLAVE_INFLUENCE_RECIPIENT
			add = {
				add = -10
				multiply = scope:secondary_recipient.var:rot_conclave_influence
			}
			scope:secondary_recipient = {
				has_variable = rot_conclave_influence
			}
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5

	on_accept = {
		if = {
			limit = {
				scope:secondary_recipient = { is_alive = yes }
			}
			if = {
				limit = { scope:excommunication_hook = yes }
				scope:actor = {
					use_hook = scope:recipient
				}
			}

			scope:actor = {
				#Spend piety for the excommunication.
				add_piety = massive_piety_loss

				#Letter event to inform character the pope agreed to their request.
				trigger_event = {
					id = religious_interaction.1022
				}
			}
			excommunicate_character = {
				TARGET_CHARACTER = scope:secondary_recipient
				REQUESTING_CHARACTER = scope:actor
			}
			scope:secondary_recipient = {
				#Letter event to inform character that they have been excommunicated.
				trigger_event = {
					id = religious_interaction.1020
				}
				hidden_effect = { #Nudge towards rivalry
					if = {
						limit = {
							NOR = {
								has_relation_rival = scope:actor
								has_relation_potential_rival = scope:actor
							}
							scope:actor = { is_alive = yes }
						}
						set_relation_potential_rival = scope:actor
					}
				}
			}
		}
	}

	on_decline = {
		scope:actor = {
			#Letter event to inform character the pope refused their request.
			trigger_event = {
				id = religious_interaction.1023
			}
		}
	}
	
	#AI will do
	
	ai_potential = {
		is_adult = yes
		piety >= major_piety_value
	}
	
	ai_target_quick_trigger = {
		adult = yes
	}

	ai_targets = {
		ai_recipients = scripted_relations
		ai_recipients = primary_war_enemies
	}
	
	ai_frequency = 36

	ai_will_do = {
		base = 25

		ai_value_modifier = { # +50 to -50
			who = scope:actor
			ai_vengefulness = 0.5
		}
		
		modifier = {
			factor = 0
			scope:secondary_recipient = {
				NOR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
	}
}
#Updated to 1.7
hof_ask_for_claim_interaction = {
	category = interaction_category_diplomacy
	icon = religious_claim

	desc = hof_ask_for_claim_interaction_desc
	target_type = title
	target_filter = secondary_recipient_domain_titles
	redirect = {
		if = {
			limit = {
				scope:actor.faith = { AND = { has_doctrine = doctrine_independent_papacy_head has_variable_list = rot_antipopes } }	
			}
			rot_get_pope_of_target = {
				TARGET = scope:recipient
			}
			scope:recipient = {
				save_scope_as = secondary_recipient
			}
			scope:pope_of_target = {
				save_scope_as = recipient
			}
		}
		else_if = {
			limit = {
				exists = scope:actor.faith.religious_head
			}
			scope:recipient = {
				save_scope_as = secondary_recipient
			}
			scope:actor.faith.religious_head = {
				save_scope_as = recipient
			}
		}
		if = {
			limit = {
				scope:actor = { has_cardinal_faith = yes } #might error
			}
			scope:actor = {
				removingvariableeffect = yes
			}
			scope:secondary_recipient = {
				removingvariableeffect = yes
			}
			if = {
				limit = {
					scope:actor = {
						faith = faith:catholic
					}
				}
				scope:actor.faith = {
					every_faith_ruler = {
						limit = { 
							OR = {
								has_trait = cardinal_priest
								has_trait = cardinal_bishop
								has_trait = cardinal_archbishop
							}
							faith = scope:secondary_recipient.faith
							top_liege = scope:secondary_recipient
						}
						if = {
							limit = {
								scope:secondary_recipient = {
									NOT = { removingvariableeffecttrigger = yes }
								}
							}
							scope:secondary_recipient = {
								setingvariableeffect = yes
							}
						}
						else = {
							scope:secondary_recipient = {
								changingvariableeffect = yes
							}
						}
					}
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = { tier >= tier_county }
	}
	
	is_shown = {
		exists = scope:actor.faith.religious_head
		scope:actor.faith = scope:secondary_recipient.faith
		NOR = {
			scope:actor = scope:secondary_recipient
			scope:secondary_recipient = scope:recipient
		}
		exists = scope:actor.faith.religious_head
		scope:actor.faith = {
			OR = {
				has_doctrine = doctrine_independent_papacy_head
				has_doctrine = doctrine_spiritual_head
			}
		}
		scope:secondary_recipient = {
			is_landed = yes
			#primary_title = { tier >= tier_county } I think they should? KOH Change
			NOT = { has_government = holy_order_government }
		}
	}
	
	is_valid_showing_failures_only = {
		trigger_if = { # Can't request on titles you already have a pressed claim on
			limit = {
				exists = scope:target
				scope:actor = {
					has_strong_claim_on = scope:target
				}
			}
			custom_description = {
				text = "hof_ask_for_claim_has_pressed_claim_already"
				always = no
			}
		}
		trigger_if = { # Cant request claims on baronies
			limit = {
				OR = {
					scope:recipient.highest_held_title_tier = tier_barony
					AND = {
						exists = scope:target
						scope:target = {
							tier = tier_barony
						}
					}
				}
			}
			custom_description = {
				text = "hof_ask_for_claim_no_baronies"
				always = no
			}
		}
		trigger_if = { # Can't request claims on theocratic lessees or theocracies (= Prince-Bishops)
			limit = {
				scope:secondary_recipient = { 
					has_government = theocracy_government
				}
			}
			custom_description = {
				text = "hof_ask_for_claim_theocratic_lessee"
				always = no	
			}	
		}
		scope:actor = { # Variable piety cost depending on tier
			trigger_if = {
				limit = {
					exists = scope:target
				}
				piety >= claim_piety_value
			}
			custom_description = {
				text = "hof_ask_for_claim_excommunicated"
				NOT = { has_trait = excommunicated }
			}
			NOT = {
				is_at_war_with = scope:recipient
			}
		}
		scope:actor = {
			custom_description = {
				text = "hof_interaction_unreformed_faith"
				NOT = {
					faith = { has_doctrine_parameter = unreformed }
				}
			}
		}
		scope:recipient = { is_busy_in_events_localised = yes }
		scope:secondary_recipient = { NOT = { has_strong_hook = scope:actor } }
	}
	
	ai_accept = {
		base = 0 # Should be 0 for all interactions

		modifier = {
			scope:claim_hook = yes
			add = 100
			desc = SCHEME_WEAK_HOOK_USED
		}
		
		modifier = {
			add = -50
			desc = BASE_RELUCTANCE
		}
		
		modifier = { # Practically impossible to claim Kingdoms/Empires when already King/Emperor
			add = -1000
			desc = I_AM_ALREADY_HIGH_TIER
			scope:actor.primary_title = {
				tier >= tier_kingdom
			}
			scope:target = {
				tier >= tier_kingdom
			}
		}
		
		modifier = { # Characters with a pressed claim on a kingdom or empire already has a reduced chance of getting a claim on a kingdom or empire
			add = -200
			desc = I_ALREADY_HAVE_A_KINGDOM_OR_EMPIRE_CLAIM
			scope:actor = {
				any_claim = {
					pressed = yes
					tier >= tier_kingdom
				}
			}
			scope:target = {
				tier >= tier_kingdom
			}
		}
		
		opinion_modifier = { # More likely if Recipient likes Actor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		
		modifier = { # Same language
			add = 5
			desc = speaks_same_language_interaction_reason
			trigger = {
				scope:actor = {
					knows_language_of_culture = scope:recipient.culture
				}
			}
		}

		opinion_modifier = { # Unlikely if Recipient likes Secondary Recipient
			who = scope:recipient
			opinion_target = scope:secondary_recipient
			multiplier = -1
			desc = AI_OPINION_REASON
		}
		
		modifier = { # Less likely the lower their tier is compared to you
			add = {
				add = -10
				if = {
					limit = {
						scope:actor = {
							tier_difference = {
								target = scope:secondary_recipient
								value >= 2
							}
						}
					}
					add = -10
				}
				if = {
					limit = {
						scope:actor = {
							tier_difference = {
								target = scope:secondary_recipient
								value >= 3
							}
						}
					}
					add = -10
				}
			}
			desc = THEY_ARE_LOWER_TIER
			scope:actor = {
				tier_difference = {
					target = scope:secondary_recipient
					value >= 1
				}
			}
		}
		
		modifier = { # Penalty for asking claims on your own vassals
			add = -50
			desc = THEY_ARE_YOUR_VASSAL
			scope:actor = {
				any_vassal_or_below = {
					this = scope:secondary_recipient
				}
			}
		}
		
		modifier = { # Bonus for adults to ask on children
			add = 25
			desc = THEY_ARE_A_CHILD
			scope:secondary_recipient = {
				is_adult = no
			}
			scope:actor = {
				is_adult = yes
			}
		}
		
		modifier = { # Penalty for children to ask on adults
			add = -25
			desc = I_AM_A_CHILD
			scope:secondary_recipient = {
				is_adult = yes
			}
			scope:actor = {
				is_adult = no
			}
		}
		
		modifier = { # Bonus for men if a woman under male preference
			add = 15
			desc = THEY_ARE_FEMALE_WHEN_MALE_IS_PREFERRED
			scope:secondary_recipient = {
				is_adult = yes
				is_female = yes
			}
			scope:actor = {
				is_adult = yes
				is_female = no
				faith = {
					has_doctrine = doctrine_gender_male_dominated
				}
			}
		}
		
		modifier = { # Bonus for women if a man under female preference
			add = 15
			desc = THEY_ARE_MALE_WHEN_FEMALE_IS_PREFERRED
			scope:secondary_recipient = {
				is_adult = yes
				is_female = no
			}
			scope:actor = {
				is_adult = yes
				is_female = yes
				faith = {
					has_doctrine = doctrine_gender_female_dominated
				}
			}
		}
		
		modifier = { # Penalty for women to ask claims on men under male preference
			add = -15
			desc = I_AM_FEMALE_WHEN_MALE_IS_PREFERRED
			scope:actor = {
				is_adult = yes
				is_female = yes
				faith = {
					has_doctrine = doctrine_gender_male_dominated
				}
			}
			scope:secondary_recipient = {
				is_adult = yes
				is_female = no
			}
		}
		
		modifier = { # Penalty for men to ask claims on women under female preference
			add = -15
			desc = I_AM_MALE_WHEN_FEMALE_IS_PREFERRED
			scope:actor = {
				is_adult = yes
				is_female = no
				faith = {
					has_doctrine = doctrine_gender_female_dominated
				}
			}
			scope:secondary_recipient = {
				is_adult = yes
				is_female = yes
			}
		}
		
		modifier = { # They are Excommunicated
			add = 25
			desc = THEY_ARE_EXCOMMUNICATED
			scope:secondary_recipient = {
				has_trait = excommunicated
			}
		}
		
		modifier = { # I am a Kinslayer
			add = -15
			desc = I_AM_A_KINSLAYER
			scope:actor = {
				has_trait_rank = {
					trait = kinslayer
					rank >= 1
				}
			}
		}
		
		modifier = { # They are a Kinslayer
			add = 15
			desc = THEY_ARE_A_KINSLAYER
			scope:secondary_recipient = {
				has_trait_rank = {
					trait = kinslayer
					rank >= 1
				}
			}
		}
		
		modifier = { # They are of the same dynasty as the Head of Faith
			add = -5
			desc = THEY_ARE_MY_DYNASTY_MEMBER
			scope:recipient = {
				is_lowborn = no
				dynasty = scope:secondary_recipient.dynasty
				NOR = {
					house = scope:secondary_recipient.house
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor	
					scope:recipient.dynasty = scope:actor.dynasty
				}
			}
		}
		
		modifier = { # You are of the same dynasty as the Head of Faith
			add = 5
			desc = YOU_ARE_MY_DYNASTY_MEMBER
			scope:recipient = {
				is_lowborn = no
				dynasty = scope:actor.dynasty
				NOR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor
					scope:recipient.dynasty = scope:secondary_recipient.dynasty
				}
			}
		}
		
		modifier = { # They are of the same house as the Head of Faith
			add = -10
			desc = THEY_ARE_MY_HOUSE_MEMBER
			scope:recipient = {
				is_lowborn = no
				house = scope:secondary_recipient.house
				NOR = {
					house = scope:actor.house
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor	
					scope:recipient.house = scope:actor.house
				}
			}
		}
		
		modifier = { # You are of the same house as the Head of Faith
			add = 10
			desc = YOU_ARE_MY_HOUSE_MEMBER
			scope:recipient = {
				is_lowborn = no
				house = scope:actor.house
				NOR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor
					scope:recipient.house = scope:secondary_recipient.house
				}
			}
		}
		
		modifier = { # Related to the Head of Faith
			add = 25
			desc = YOU_ARE_MY_RELATIVE
			scope:recipient = {
				OR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
				}
				NOT = { is_child_of = scope:actor }
			}
		}
		
		modifier = { # Parent of the Head of Faith
			add = 50
			desc = YOU_ARE_MY_PARENT
			scope:recipient = {
				is_child_of = scope:actor
			}
		}
		
		modifier = { # Friend of the Head of Faith
			add = 15
			desc = WE_ARE_FRIENDS
			scope:recipient = {
				has_relation_friend = scope:actor
			}
		}
		
		modifier = { # Best Friend of the Head of Faith
			add = 20
			desc = WE_ARE_BEST_FRIENDS
			scope:recipient = {
				has_relation_best_friend = scope:actor
			}
		}
		
		modifier = { # Lover of the Head of Faith
			add = 10
			desc = WE_ARE_LOVERS
			scope:recipient = {
				has_relation_lover = scope:actor
			}
		}
		
		modifier = { # Rival of the Head of Faith
			add = -100
			desc = WE_ARE_RIVALS
			scope:recipient = {
				has_relation_rival = scope:actor
			}
		}
		
		modifier = { # Nemesis of the Head of Faith
			add = -500
			desc = WE_ARE_NEMESES
			scope:recipient = {
				has_relation_nemesis = scope:actor
			}
		}
		
		modifier = {
			add = {
				add = 10
				multiply = scope:actor.num_virtuous_traits
			}
			scope:actor.num_virtuous_traits > 0
			desc = I_AM_VIRTUOUS
		}
		
		modifier = {
			add = {
				add = -10
				multiply = scope:secondary_recipient.num_virtuous_traits
			}
			scope:secondary_recipient.num_virtuous_traits > 0
			desc = THEY_ARE_VIRTUOUS
		}
		
		modifier = {
			add = {
				add = -10
				multiply = scope:actor.num_sinful_traits
			}
			scope:actor.num_sinful_traits > 0
			desc = I_AM_SINFUL
		}
		
		modifier = {
			add = {
				add = 10
				multiply = scope:secondary_recipient.num_sinful_traits
			}
			scope:secondary_recipient.num_sinful_traits > 0
			desc = THEY_ARE_SINFUL
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_SAVIOR
			add = 15
			scope:actor = {
				has_trait = savior
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_DIVINE_BLOOD
			add = 5
			scope:actor = {
				has_trait = divine_blood
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_PARAGON
			add = 15
			scope:actor = {
				has_trait = paragon
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONSECRATED_BLOOD
			add = 5
			scope:actor = {
				has_trait = consecrated_blood
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONCLAVE_INFLUENCE_ACTOR
			add = {
				add = 10
				multiply = scope:actor.var:rot_conclave_influence
			}
			scope:actor = {
				has_variable = rot_conclave_influence
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONCLAVE_INFLUENCE_RECIPIENT
			add = {
				add = -10
				multiply = scope:secondary_recipient.var:rot_conclave_influence
			}
			scope:secondary_recipient = {
				has_variable = rot_conclave_influence
			}
		}
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:claim_hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	
	send_option = {
		is_shown = {
			NOT = { scope:actor = scope:recipient }
		}
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = claim_hook
		localization = GENERIC_SPEND_A_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	
	send_options_exclusive = no
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		hof_ask_for_claim_interaction_effect = yes
		scope:secondary_recipient = {
			trigger_event = religious_interaction.5
		}
		scope:actor = {
			trigger_event = religious_interaction.4
		}
	}

	on_decline = {
		scope:actor = {
			trigger_event = religious_interaction.42
		}
	}
}
#Updated to 1.7
hof_ask_for_gold_interaction = {
	category = interaction_category_religion

	desc = hof_ask_for_gold_interaction_desc
	
	ai_targets = {
		ai_recipients = head_of_faith
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 60
	
	cooldown_against_recipient = { years = 3 }
	
	is_shown = {
		NOT = {
			scope:recipient = scope:actor
		}
		scope:actor.faith = {
			OR = {
				has_doctrine = doctrine_independent_papacy_head
				has_doctrine = doctrine_spiritual_head
			}
		}

		trigger_if = {
			limit = {
				scope:actor = {
					faith = {
						AND = {
							has_doctrine = doctrine_independent_papacy_head 
							has_variable_list = rot_antipopes
						}
					}
				}	
			}
			rot_is_pope_of_target_trigger = { 
				TARGET = scope:actor 
				POPE = scope:recipient 
			}
		}
		trigger_else = {
			exists = scope:actor.faith.religious_head
			scope:actor.faith.religious_head = scope:recipient
		}
	}

	is_valid_showing_failures_only = {
		scope:recipient = {
			gold >= scope:actor.head_of_faith_gold_value
		}
		scope:actor = {
			piety >= major_piety_value
			custom_description = {
				text = "hof_ask_for_gold_excommunicated"
				NOT = { has_trait = excommunicated }
			}
			NOT = {
				is_at_war_with = scope:recipient
			}
		}
		scope:actor = {
			custom_description = {
				text = "hof_interaction_unreformed_faith"
				NOT = {
					faith = { has_doctrine_parameter = unreformed }
				}
			}
		}
		scope:recipient = { is_busy_in_events_localised = yes }
	}
	
	ai_accept = {
		base = -40

		compare_modifier = {
			value = scope:recipient.gold
			trigger = {
				scope:recipient.gold > 2500
			}
			offset = -2500
			multiplier = 0.1
			max = 50
			desc = ASK_FOR_GOLD_OVERFLOWING_COFFERS
		}
		
		opinion_modifier = {
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 1
		}
		
		modifier = { # Same language
			add = 5
			desc = speaks_same_language_interaction_reason
			trigger = {
				scope:actor = {
					knows_language_of_culture = scope:recipient.culture
				}
			}
		}
	
		modifier = { # Attacking a co-religionist
			add = -50
			desc = I_AM_ATTACKING_A_CORELIGIONIST
			scope:actor = {
				is_at_war = yes
				any_character_war = {
					primary_attacker = scope:actor
					primary_defender.faith = scope:actor.faith
					primary_defender = {
						NOT = {
							has_trait = excommunicated
						}
					}
				}
			}
		}
		
		modifier = { # Offensive holy war/excommunication war
			add = 30
			desc = I_AM_WAGING_AN_OFFENSIVE_HOLY_OR_EXCOMMUNICATION_WAR
			scope:actor = {
				is_at_war = yes
				any_character_war = {
					is_attacker = scope:actor
					OR = {
						using_non_ghw_holy_war_cb_trigger = yes
						using_cb = excommunication_war
					}
				}
			}
		}
		
		modifier = { # Defensive Holy War
			add = 50
			desc = I_AM_DEFENDING_AGAINST_A_HOLY_WAR
			scope:actor = {
				is_at_war = yes
				any_character_war = {
					is_defender = scope:actor
					using_non_ghw_holy_war_cb_trigger = yes
				}
			}
		}
		
		modifier = { # HoF wants the money for themselves!
			add = -20
			desc = THEY_ARE_GREEDY
			scope:recipient = {
				ai_greed >= high_positive_greed
			}
		}
		
		modifier = { # I am rich already
			add = -25
			desc = I_AM_RICH
			scope:actor = {
				gold >= scope:actor.medium_treasury_value
				NOT = {
					gold >= scope:actor.major_treasury_value
				}
			}
		}
		
		modifier = { # I am rich already
			add = -50
			desc = I_AM_RICH
			scope:actor = {
				gold >= scope:actor.major_treasury_value
				NOT = {
					gold >= scope:actor.massive_treasury_value
				}
			}
		}
		
		modifier = { # I am very rich already
			add = -75
			desc = I_AM_RICH
			scope:actor = {
				gold >= scope:actor.massive_treasury_value
			}
		}
		
		modifier = { # I am a Kinslayer
			add = -15
			desc = I_AM_A_KINSLAYER
			scope:actor = {
				has_trait_rank = {
					trait = kinslayer
					rank >= 1
				}
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_SAVIOR
			add = 15
			scope:actor = {
				has_trait = savior
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_DIVINE_BLOOD
			add = 5
			scope:actor = {
				has_trait = divine_blood
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_PARAGON
			add = 15
			scope:actor = {
				has_trait = paragon
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONSECRATED_BLOOD
			add = 5
			scope:actor = {
				has_trait = consecrated_blood
			}
		}
		
		modifier = { # You are of the same dynasty as the Head of Faith
			add = 5
			desc = YOU_ARE_MY_DYNASTY_MEMBER
			scope:recipient = {
				is_lowborn = no
				dynasty = scope:actor.dynasty
				NOR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor
					scope:recipient.dynasty = scope:secondary_recipient.dynasty
				}
			}
		}
		
		modifier = { # You are of the same house as the Head of Faith
			add = 10
			desc = YOU_ARE_MY_HOUSE_MEMBER
			scope:recipient = {
				is_lowborn = no
				house = scope:actor.house
				NOR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor
					scope:recipient.house = scope:secondary_recipient.house
				}
			}
		}
		
		modifier = { # Related to the Head of Faith
			add = 10
			desc = YOU_ARE_MY_RELATIVE
			scope:recipient = {
				OR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
				}
				NOT = { is_child_of = scope:actor }
			}
		}
		
		modifier = { # Parent of the Head of Faith
			add = 25
			desc = YOU_ARE_MY_PARENT
			scope:recipient = {
				is_child_of = scope:actor
			}
		}
		
		modifier = { # Friend of the Head of Faith
			add = 25
			desc = WE_ARE_FRIENDS
			scope:recipient = {
				has_relation_friend = scope:actor
			}
		}
		
		modifier = { # Best Friend of the Head of Faith
			add = 50
			desc = WE_ARE_BEST_FRIENDS
			scope:recipient = {
				has_relation_best_friend = scope:actor
			}
		}
		
		modifier = { # Lover of the Head of Faith
			add = 10
			desc = WE_ARE_LOVERS
			scope:recipient = {
				has_relation_lover = scope:actor
			}
		}
		
		modifier = { # Rival of the Head of Faith
			add = -100
			desc = WE_ARE_RIVALS
			scope:recipient = {
				has_relation_rival = scope:actor
			}
		}
		
		modifier = { # Nemesis of the Head of Faith
			add = -500
			desc = WE_ARE_NEMESES
			scope:recipient = {
				has_relation_nemesis = scope:actor
			}
		}
		
		modifier = {
			add = {
				add = 10
				multiply = scope:actor.num_virtuous_traits
			}
			scope:actor.num_virtuous_traits > 0
			desc = I_AM_VIRTUOUS
		}
		
		modifier = {
			add = {
				add = 5
				multiply = scope:actor.piety_level
			}
			scope:actor.piety_level > 1
			desc = I_AM_PIOUS
		}
		
		modifier = {
			add = {
				add = 10
				multiply = scope:actor.piety_level
			}
			scope:actor.piety_level > 2
			scope:actor.gold < 0
			desc = I_AM_PIOUS_AND_BROKE
		}
		
		modifier = {
			add = {
				add = -10
				multiply = scope:actor.num_sinful_traits
			}
			scope:actor.num_sinful_traits > 0
			desc = I_AM_SINFUL
		}
		
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONCLAVE_INFLUENCE_ACTOR
			add = {
				add = 10
				multiply = scope:actor.var:rot_conclave_influence
			}
			scope:actor = {
				has_variable = rot_conclave_influence
			}
		}
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
		}
	}
	
	send_option = {
		is_shown = {
			NOT = { scope:actor = scope:recipient }
		}
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = hook
		localization = GENERIC_SPEND_A_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		hof_ask_for_gold_interaction_effect = yes
		
		scope:actor = {
			trigger_event = religious_interaction.3
		}
	}

	on_decline = {
		scope:actor = {
			trigger_event = religious_interaction.32
			add_opinion = {
				target = scope:recipient
				modifier = requested_money_opinion
				opinion = -20
			}
		}
	}
	
	ai_potential = {
		is_landed = yes
		piety >= major_piety_value
		is_landed = yes
		NOT = { has_trait = excommunicated }
		highest_held_title_tier > tier_barony
	}

	ai_will_do = {
		base = 0
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}

		modifier = { # Counts get a bad 'exchange rate' due to their low income.
			highest_held_title_tier < tier_county 
			scope:recipient.gold < 3000
			add = -50
		}
		modifier = { # Dukes are also somewhat reluctant to request gold if not independent.
			highest_held_title_tier = tier_duchy 
			is_independent_ruler = no
			scope:recipient.gold < 3000
			add = -25
		}

		modifier = { # I am low on money while at war
			add = 300
			scope:actor = {
				is_at_war = yes
				gold < medium_gold_value
			}
		}
		modifier = { # I am in debt
			add = 300
			scope:actor = {
				gold < 0
			}
		}

		modifier = { # Piety to burn, and no reason to keep it.
			add = 25
			scope:actor = {
				piety > massive_piety_value
				NOR = {
					has_character_modifier = vow_of_poverty_modifier
					has_trait = generous 
					ai_zeal >= high_positive_zeal
				}
			}
		}
		modifier = { # Or when greedy
			add = scope:actor.ai_greed
			scope:actor = {
				ai_greed > 0
			}
		}
		
		modifier = { # If the Pope has overflowing coffers, it'd be rather impious to NOT ask him to give some to a fellow, poor and struggling christian!
			add = 50
			scope:actor = {
				piety > major_piety_value
			}
			scope:recipient.gold >= 3000
		}
	}
}
#Updated to 1.7
seek_indulgences_interaction = {
	category = interaction_category_religion

	desc = seek_indulgences_interaction_desc

	notification_text = RELIGIOUS_HEAD_SEEK_INDULGENCES

	is_shown = {
		NOT = {
			scope:recipient = scope:actor
		}
		scope:actor.faith = {
			has_doctrine = tenet_communion
		}
		trigger_if = {
			limit = {
				scope:actor.faith = { AND = { has_doctrine = doctrine_independent_papacy_head has_variable_list = rot_antipopes } }
			}
			rot_is_pope_of_target_trigger = { 
				TARGET = scope:actor 
				POPE = scope:recipient 
			}
		}
		trigger_else = {
			scope:actor.faith.religious_head = scope:recipient
		}
	}

	cooldown = { years = 5 }

	is_valid_showing_failures_only = {
		scope:actor = {
			trigger_if = {
				limit = {
					has_trait = kinslayer_3
					trait_is_shunned_or_criminal_in_faith_trigger = { FAITH = faith TRAIT = kinslayer_3 GENDER_CHARACTER = scope:actor }
				}
				gold >= seek_indulgences_major_criminal_trait_value
			}
			trigger_else_if = {
				limit = {
					OR = {
						AND = {
							has_trait = kinslayer_2
							trait_is_shunned_or_criminal_in_faith_trigger = { FAITH = faith TRAIT = kinslayer_2 GENDER_CHARACTER = scope:actor }
						}
						AND = {
							has_trait = witch
							trait_is_shunned_or_criminal_in_faith_trigger = { FAITH = faith TRAIT = witch GENDER_CHARACTER = scope:actor }
						}
						AND = {
							has_trait = deviant
							trait_is_shunned_or_criminal_in_faith_trigger = { FAITH = faith TRAIT = deviant GENDER_CHARACTER = scope:actor }
						}
						AND = {
							has_trait = sodomite
							trait_is_shunned_or_criminal_in_faith_trigger = { FAITH = faith TRAIT = sodomite GENDER_CHARACTER = scope:actor }
						}
					}
				}
				gold >= seek_indulgences_medium_criminal_trait_value
			}
			trigger_else_if = {
				limit = {
					OR = {
						AND = {
							has_trait = kinslayer_1
							trait_is_shunned_or_criminal_in_faith_trigger = { FAITH = faith TRAIT = kinslayer_1 GENDER_CHARACTER = scope:actor }
						}
						AND = {
							has_trait = fornicator
							trait_is_shunned_or_criminal_in_faith_trigger = { FAITH = faith TRAIT = fornicator GENDER_CHARACTER = scope:actor }
						}
						AND = {
							has_trait = adulterer
							trait_is_shunned_or_criminal_in_faith_trigger = { FAITH = faith TRAIT = adulterer GENDER_CHARACTER = scope:actor }
						}
					}
				}
				gold >= seek_indulgences_minor_criminal_trait_value
			}
			trigger_else = {
				gold >= seek_indulgences_buy_piety_value
			}
			custom_description = {
				text = "seek_indulgences_excommunicated"
				NOT = { has_trait = excommunicated }
			}
		}
		scope:actor = {
			custom_description = {
				text = "hof_interaction_unreformed_faith"
				NOT = {
					faith = { has_doctrine_parameter = unreformed }
				}
			}
			NOT = {
				is_at_war_with = scope:recipient
			}
		}
		scope:recipient = { is_busy_in_events_localised = yes }
	}
	
	ai_accept = {
		base = 50
		
		opinion_modifier = {
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 1
		}
				
		modifier = { # Same language
			add = 5
			desc = speaks_same_language_interaction_reason
			trigger = {
				scope:actor = {
					knows_language_of_culture = scope:recipient.culture
				}
			}
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		seek_indulgences_interaction_effect = yes
		scope:actor = {
			trigger_event = religious_interaction.1010
		}
	}

	on_decline = {
		scope:actor = {
			trigger_event = religious_interaction.1011
		}
	}
	
	# AI will do
	
	ai_potential = {
		short_term_gold >= head_of_faith_gold_value
		NOT = {
			has_trait = cynical
		}
	}

	ai_targets = {
		ai_recipients = head_of_faith
	}
	
	ai_frequency = 36

	ai_will_do = {
		base = -25

		ai_value_modifier = { # +50 to -50
			who = scope:actor
			ai_zeal = 0.5
		}
		
		modifier = {
			add = 50		
			scope:actor = {
				piety < 0
			}
		}
		
		modifier = {
			add = 75
			scope:actor = {
				piety_level < 0
			}
		}
		
		modifier = {
			add = 50
			scope:actor = {
				piety < major_piety_value
				short_term_gold >= head_of_faith_gold_value
				short_term_gold >= monumental_gold_value
			}
		}
		
		modifier = {
			add = -25
			scope:actor = {
				piety > major_piety_value
				piety_level > 0
			}
		}
	}
}

#Updated to 1.7
declaration_of_repentance_interaction = {
	category = interaction_category_religion

	desc = {
		desc = declaration_of_repentance_interaction_desc
		triggered_desc = {
			trigger = { scope:actor = { has_hook = scope:recipient } }
			desc = declaration_of_repentance_interaction_desc_hook
		}
	}

	notification_text = RELIGIOUS_HEAD_DECLARATION_OF_REPENTANCE

	is_shown = {
		NOT = {
			scope:recipient = scope:actor
		}
		scope:actor = {
			has_trait = excommunicated
			faith = {
				has_doctrine = tenet_communion
				trigger_if = {
					limit = {
						AND = {
							has_variable_list = rot_antipopes
							has_doctrine = doctrine_independent_papacy_head
						}
					}
					rot_is_pope_of_target_trigger = { 
						TARGET = scope:actor 
						POPE = scope:recipient 
					}
				}
				trigger_else = {
					scope:actor.faith.religious_head = scope:recipient
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			NOT = {
				has_character_modifier = recent_excommunication
			}
			NOT = {
				is_at_war_with = scope:recipient
			}
		}
		scope:recipient = { is_busy_in_events_localised = yes }
	}
	
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = declaration_hook
		localization = DECLARATION_OF_REPENTANCE_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:declaration_hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	ai_accept = {
		base = 25
		
		modifier = {
			scope:declaration_hook = yes
			add = 20
			desc = SCHEME_WEAK_HOOK_USED
		}
		opinion_modifier = {
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 1
		}
		modifier = { # Same language
			add = 5
			desc = speaks_same_language_interaction_reason
			trigger = {
				scope:actor = {
					knows_language_of_culture = scope:recipient.culture
				}
			}
		}
		modifier = {
			add = {
				add = 10
				multiply = scope:actor.num_virtuous_traits
			}
			scope:actor.num_virtuous_traits > 0
			desc = DECLARATION_OF_REPENTANCE_VIRTUES
		}
		modifier = {
			add = {
				add = -10
				multiply = scope:actor.num_sinful_traits
			}
			scope:actor.num_sinful_traits > 0
			desc = DECLARATION_OF_REPENTANCE_SINS
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_PARAGON
			add = 15
			scope:actor = {
				has_trait = paragon
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONSECRATED_BLOOD
			add = 5
			scope:actor = {
				has_trait = consecrated_blood
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_UNPLEDGED_GHW
			add = -25
			scope:recipient = {
				has_opinion_modifier = {
					target = scope:actor
					modifier = unpledged_from_ghw_opinion
				}
			}
		}
	}
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		declaration_of_repentance_interaction_effect = yes

		scope:actor = {
			#Letter event to inform character that their excommunication has been lifted.
			trigger_event = {
				id = religious_interaction.1024
			}
		}
	}

	on_decline = {
		scope:actor = {

			#Letter event to inform character the pope refused to lift the excommunication.
			trigger_event = {
				id = religious_interaction.1025
			}
		}
	}
	
	# AI will do
	
	ai_potential = {
		has_trait = excommunicated
	}

	ai_targets = {
		ai_recipients = scripted_relations #KOH CHANGE, Can't be head_of_faith due to Anti-popes
	}
	
	ai_frequency = 72

	ai_will_do = {
		base = 100
	}
}

#Updated to 1.7
lift_excommunication_interaction = {
	category = interaction_category_religion

	common_interaction = yes

	desc = lift_excommunication_interaction_desc

	is_shown = {
		scope:recipient = {
			has_trait = excommunicated
		}
		trigger_if = {
			limit = {
				scope:actor.faith = {
					AND = {
						has_doctrine = doctrine_independent_papacy_head
						has_variable_list = rot_antipopes
					}
				}
			}
			scope:actor.faith = scope:recipient.faith
			rot_is_pope_of_target_trigger = { 
				TARGET = scope:recipient 
				POPE = scope:actor  
			}
		}
		trigger_else = {
			scope:actor.faith = scope:recipient.faith
			scope:actor = scope:actor.faith.religious_head
		}
	}
	

	is_valid_showing_failures_only = {
		scope:recipient = { is_busy_in_events_localised = yes }
		scope:actor = {
			NOT = {
				is_at_war_with = scope:recipient
			}
		}
	}

	auto_accept = yes
	force_notification = yes
	notification_text = religious_interaction.1024
	#answer_accept_key = religious_interaction.1024.positive

	on_accept = {
		lift_character_excommunication_effect = {
			TARGET_CHARACTER = scope:recipient
			REQUESTING_CHARACTER = scope:actor
		}
	}
	
	# AI will do
	
	ai_potential = {
		is_adult = yes
		piety >= major_piety_value
	}
	
	ai_target_quick_trigger = {
		adult = yes
	}

	ai_targets = {
		ai_recipients = scripted_relations
		ai_recipients = war_allies
	}
	
	ai_frequency = 72

	ai_will_do = {
		base = 10

		ai_value_modifier = { # +50 to -50
			who = scope:actor
			ai_compassion = 0.5
		}
		
		modifier = {
			factor = 0
			scope:recipient = { 
				NOR = {
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
					is_allied_to = scope:actor
				}
			}
		}
	}
}

#Updated to 1.7
divorce_character_interaction = { 
	category = interaction_category_diplomacy
	use_diplomatic_range = no

	desc = divorce_character_interaction_desc

	cost = {
		piety = divorce_cost
	}
	
	is_shown = {
		scope:actor.faith = {
			# We are not required to seek approval of a spiritual HoF
			NAND = {
				has_doctrine = doctrine_divorce_approval
				has_doctrine = doctrine_spiritual_head
				exists = religious_head
			}
			# We are not required to seek approval of a house head
			NAND = {
				has_doctrine = doctrine_divorce_approval
				exists = scope:actor.house
				exists = scope:actor.house.house_head
				scope:actor = { is_house_head = no }
			}
			NOT = {
				has_doctrine = doctrine_divorce_approval
			}
		}
		scope:recipient.faith = {
			# We are not required to seek approval of a spiritual HoF
			NAND = {
				has_doctrine = doctrine_divorce_approval
				has_doctrine = doctrine_spiritual_head
				exists = religious_head
			}
			# We are not required to seek approval of a house head
			NAND = {
				has_doctrine = doctrine_divorce_approval
				exists = scope:actor.house
				exists = scope:actor.house.house_head
				scope:actor = { is_house_head = no }
			}
			NOT = {
				has_doctrine = doctrine_divorce_approval
			}
		}
		scope:recipient = {
			is_spouse_of = scope:actor
			is_concubine = no # Can set aside Concubines at any time
		}
	}

	is_valid_showing_failures_only = {
		custom_tooltip = {
			NOT = {
				scope:actor.culture = {
					has_cultural_parameter = cannot_divorce
				}
			}
			text = CULTURE_FORBIDS_DIVORCE
		}
		NOT = {
			scope:actor.faith = {
				has_doctrine = doctrine_divorce_disallowed
			}
		}
		scope:recipient = { is_busy_in_events_localised = yes }
		scope:recipient = { NOT = { has_strong_hook = scope:actor } }
	}

	auto_accept = yes

	on_accept = {
		scope:actor = {
			divorce_effect = {
				DIVORCER = scope:actor
				DIVORCEE = scope:recipient
			}
			if = {
				limit = {
					allowed_concubines = yes
				}
				custom_tooltip = divorce_cannot_concubine_ex_wife
			}
		}
		scope:recipient = {
			trigger_event = marriage_interaction.0030
		}
	}
	
	# AI
	ai_targets = {
		ai_recipients = spouses
	}
	ai_frequency = 36
	
	ai_potential = {
		is_ruler = yes
	}

	ai_will_do = {
		base = 0

		modifier = { # The AI wants to divorce should they not have an heir that is their own child, and their spouse is infertile
			add = 100
			scope:actor = {
				fertility > 0.1
				NOT = {
					any_child = {
						is_heir_of = scope:actor
					}
				}
			}
			scope:recipient = {
				is_ai = yes
				fertility < 0.1
			}
		}
		
		modifier = { # The AI will divorce if they're in a same-sex marriage and their faith changes its stance on the topic
			add = 100
			scope:actor = {
				sex_same_as = scope:recipient
				allowed_to_marry_same_sex_trigger = no
			}
		}
	}
}

#Updated to 1.7
divorce_character_rel_head_interaction = {
	category = interaction_category_diplomacy
	use_diplomatic_range = no

	cost = {
		piety = divorce_cost
	}

	redirect = {
		scope:recipient = {
			save_scope_as = secondary_recipient
		}

		if = {
			limit = {
				scope:actor.faith = { AND = { has_doctrine = doctrine_independent_papacy_head has_variable_list = rot_antipopes } }	
			}
			rot_get_pope_of_target = {
				TARGET = scope:recipient
			}
			scope:recipient = {
				save_scope_as = secondary_recipient
			}
			scope:pope_of_target = {
				save_scope_as = recipient
			}
		}
		else_if = {
			limit = {
				exists = scope:actor.faith.religious_head
			}
			scope:recipient = {
				save_scope_as = secondary_recipient
			}
			scope:actor.faith.religious_head = {
				save_scope_as = recipient
			}
		}
		else = {
			if = {
				limit = {
					exists = scope:actor.faith.religious_head
					NOT = {
						scope:actor  = {
							has_faith = faith:catholic
						}
					}
				}
				scope:actor.faith.religious_head = {
					save_scope_as = recipient
				}
			}
		}
	}

	greeting = positive
	notification_text = ASK_FOR_DIVORCE_NOTIFICATION

	is_shown = {
		exists = scope:actor.faith.religious_head
		scope:actor.faith = {
			# OR = { #keep or replace?
			# 	has_doctrine = doctrine_spiritual_head
			# 	has_doctrine = doctrine_independent_papacy_head
			# 	has_doctrine = doctrine_temporal_head
			# }
			has_doctrine = doctrine_divorce_approval
		}
		scope:secondary_recipient = {
			is_spouse_of = scope:actor
			is_concubine = no # Can set aside Concubines at any time
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			NOT = { has_trait = excommunicated }
		}
		scope:recipient = { is_busy_in_events_localised = yes }
		scope:secondary_recipient = { is_busy_in_events_localised = yes }
		custom_tooltip = {
			NOT = {
				scope:actor.culture = {
					has_cultural_parameter = cannot_divorce
				}
			}
			text = CULTURE_FORBIDS_DIVORCE
		}
		NOT = {
			scope:secondary_recipient = { has_strong_hook = scope:actor }
		}
		scope:actor = {
			piety >= divorce_cost
		}
	}

	ai_accept = {
		base = 0 # Should be 0 for all interactions
		
		divorce_character_ai_accept_modifier = yes

		modifier = { # Divine Family is part of the faith
			add = -100
			desc = DIVORCE_INCESTUOUS

			scope:actor = { 
				is_close_or_extended_family_of = scope:secondary_recipient
				faith = { has_doctrine = tenet_divine_marriage }
			}
		}
		
		modifier = { # More likely if the marriage is incestuous, unless Divine Family is part of the faith
			add = 100
			desc = DIVORCE_INCESTUOUS

			scope:actor = {
				relation_with_character_is_incestuous_in_my_faith_trigger = { CHARACTER = scope:secondary_recipient	}
			}
		}		
		
		modifier = { # They are of the same dynasty as the Head of Faith
			add = -5
			desc = THEY_ARE_MY_DYNASTY_MEMBER
			scope:recipient = {
				is_lowborn = no
				exists = dynasty
				exists = scope:secondary_recipient.dynasty
				dynasty = scope:secondary_recipient.dynasty
				NOR = {
					house = scope:secondary_recipient.house
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor	
					scope:recipient.dynasty = scope:actor.dynasty
				}
			}
		}
		
		modifier = { # You are of the same dynasty as the Head of Faith
			add = 5
			desc = YOU_ARE_MY_DYNASTY_MEMBER
			scope:recipient = {
				is_lowborn = no
				exists = dynasty
				exists = scope:actor.dynasty
				dynasty = scope:actor.dynasty
				NOR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor
					scope:recipient.dynasty = scope:secondary_recipient.dynasty
				}
			}
		}
		
		modifier = { # They are of the same house as the Head of Faith
			add = -10
			desc = THEY_ARE_MY_HOUSE_MEMBER
			scope:recipient = {
				is_lowborn = no
				exists = house
				exists = scope:secondary_recipient.house
				house = scope:secondary_recipient.house
				NOR = {
					house = scope:actor.house
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor	
					scope:recipient.house = scope:actor.house
				}
			}
		}
		
		modifier = { # You are of the same house as the Head of Faith
			add = 10
			desc = YOU_ARE_MY_HOUSE_MEMBER
			scope:recipient = {
				is_lowborn = no
				exists = house
				exists = scope:actor.house
				house = scope:actor.house
				NOR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor
					scope:recipient.house = scope:secondary_recipient.house
				}
			}
		}
		
		modifier = { # Related to the Head of Faith
			add = 25
			desc = YOU_ARE_MY_RELATIVE
			scope:recipient = {
				OR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
				}
				NOT = { is_child_of = scope:actor }
			}
		}
		
		modifier = { # Parent of the Head of Faith
			add = 50
			desc = PARENTS #YOU_ARE_MY_PARENT
			scope:recipient = {
				is_child_of = scope:actor
			}
		}
		
		modifier = {
			add = {
				add = 10
				multiply = scope:actor.num_virtuous_traits
			}
			scope:actor.num_virtuous_traits > 0
			desc = I_AM_VIRTUOUS
		}
		
		modifier = {
			add = {
				add = -10
				multiply = scope:secondary_recipient.num_virtuous_traits
			}
			scope:secondary_recipient.num_virtuous_traits > 0
			desc = THEY_ARE_VIRTUOUS
		}
		
		modifier = {
			add = {
				add = -10
				multiply = scope:actor.num_sinful_traits
			}
			scope:actor.num_sinful_traits > 0
			desc = I_AM_SINFUL
		}
		
		modifier = {
			add = {
				add = 10
				multiply = scope:secondary_recipient.num_sinful_traits
			}
			scope:secondary_recipient.num_sinful_traits > 0
			desc = THEY_ARE_SINFUL
		}
		
		modifier = { # You're in a same-sex marriage and your faith doesn't allow it
			add = 100
			desc = SAME_SEX_MARRIAGE_FAITH_REASON_ACTOR
			scope:actor.faith = scope:recipient.faith
			scope:actor = {
				sex_same_as = scope:secondary_recipient
				allowed_to_marry_same_sex_trigger = no
			}
		}

		modifier = { # You're in a same-sex marriage and their faith doesn't allow it
			add = 100
			desc = SAME_SEX_MARRIAGE_FAITH_REASON
			scope:secondary_recipient.faith = scope:recipient.faith
			scope:secondary_recipient = {
				sex_same_as = scope:actor
				allowed_to_marry_same_sex_trigger = no
			}
		}
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:divorce_hook = yes
		}
	}
	
	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = divorce_hook
		localization = GENERIC_SPEND_A_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	
	send_options_exclusive = no
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5

	on_accept = {
		if = {
			limit = { always = scope:divorce_hook }
			scope:actor = {
				if = {
					limit = {
						has_usable_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
			}
		}
		show_as_tooltip = {
			scope:actor = {
				divorce_effect = {
					DIVORCER = scope:actor
					DIVORCEE = scope:secondary_recipient
				}
			}
		}
		scope:actor = {
			trigger_event = religious_interaction.1
		}
	}

	on_decline = {
		send_interface_toast = {
			title = divorce_character_rel_head_interaction_decline_notification

			right_icon = scope:actor.faith.religious_head
		}
	}
	
	# AI
	ai_targets = {
		ai_recipients = spouses
	}
	ai_frequency = 36
	
	ai_potential = {
		is_ruler = yes
	}

	ai_will_do = {
		base = 0

		modifier = { # The AI wants to divorce should they not have an heir that is their own child, and their spouse is infertile
			add = 100
			scope:actor = {
				fertility > 0.1
				NOT = {
					any_child = {
						is_heir_of = scope:actor
					}
				}
			}
			scope:secondary_recipient = {
				is_ai = yes
				fertility < 0.1
			}
		}
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:divorce_hook = yes
			add = -1
		}
		
		modifier = { # You're in a same-sex marriage and your faith doesn't allow it
			add = 100
			scope:actor = {
				sex_same_as = scope:secondary_recipient
				allowed_to_marry_same_sex_trigger = no
			}
		}
	}	
}

#Updated to 1.7
take_vows_interaction = {
	category = interaction_category_friendly
	icon = religious

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	#can_send_despite_rejection = yes
	popup_on_receive = yes
	pause_on_receive = yes
	
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }

	desc = take_vows_interaction_desc

	on_decline_summary = take_vows_decline_summary

	greeting = negative
	notification_text = REQUEST_VOWS_NOTIFICATION_TEXT

	is_shown = {
		scope:recipient = {
			is_courtier_of = scope:actor
			NOR = { 
				has_trait = devoted 
				has_trait = order_member 
			}
		}
		NOT = { #Not your bishop
			scope:actor = {
				any_learning_councillor = { this = scope:recipient }
			}
		}
		scope:actor.faith = {
			has_doctrine_parameter = take_vows_active # Faith has Monastery order that recipient can be sent to
		}
	}
	
	is_valid_showing_failures_only = {

		scope:recipient = {
			age >= 6
			can_take_religious_vows_trigger = yes #Triggers that applies to both Monastery or Holy Order requirements
		}
	}
	
	#Use hook
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	cost = {
		piety = scope:recipient.ask_to_take_vows_piety_cost
	}

	on_send = {
		scope:recipient = {
			set_variable = {
				name = vows_piety_spent
				value = ask_to_take_vows_piety_cost
				days = 10
 			}
 		}
 	}

	on_accept = {
		scope:actor = {
			if = {
				limit = { scope:hook = yes }
				use_hook = scope:recipient
			}
			
			show_as_tooltip = {
				send_child_to_clergy_effect = yes
			}
			scope:recipient = {
				if = {
					limit = {
						scope:actor.top_liege = {
							any_vassal_or_below = {
								has_government = theocracy_government
								primary_title.tier > tier_barony
								faith = scope:actor.faith
							}
						}
					}
					scope:actor.top_liege = {
						random_vassal_or_below = {
							limit = {
								has_government = theocracy_government
								primary_title.tier > tier_barony
								faith = scope:actor.faith
							}
							save_scope_as = theocratic_travel_target
						}
					}
					visit_court_of = scope:theocratic_travel_target
				}
				else_if = {
					limit = {
						exists = scope:actor.capital_province
					}
					move_to_pool_at = scope:actor.capital_province
				}
				kick_from_court_interaction_warning_tooltip_effect = yes
			}
			trigger_event = holy_order.0002
			if = {
				limit = {
					exists = cp:councillor_court_chaplain
					scope:recipient = {
						is_close_family_of = scope:actor
					}
				}
				cp:councillor_court_chaplain = {
					add_opinion = {
						target = scope:actor
						modifier = pious_opinion
						opinion = 25
					}
				}
			}
			if = {
				limit = {
					exists = faith.religious_head
					scope:recipient = {
						is_close_family_of = scope:actor
					}
				}
				faith.religious_head = {
					add_opinion = {
						target = scope:actor
						modifier = pious_opinion
						opinion = 10
					}
				}
			}
		}

		hidden_effect = {
			scope:recipient = {
				remove_variable = vows_piety_spent
			}
		}
	}

	on_decline = {
		scope:recipient = {
			add_opinion = {
				target = scope:actor
				modifier = asked_me_to_take_vows_opinion
				years = 10
			}
		}
		#Letter event informing the character about the rejection.
		scope:actor = {
			trigger_event = {
				id = religious_interaction.1031
			}
		}

		# Refund piety cost
		show_as_tooltip = {
			scope:actor = {
				add_piety_no_experience = {
					value = scope:recipient.ask_to_take_vows_piety_cost
				}
			}
		}
		# Refund piety cost
		hidden_effect = {
			if = {
				limit = {
					scope:recipient = {
						has_variable = vows_piety_spent
 					}
 				}
				scope:actor = {
					add_piety_no_experience = {
						value = scope:recipient.var:vows_piety_spent
 					}
				}
				scope:recipient = {
					remove_variable = vows_piety_spent
 				}
 			}
 		}
 	}

	#auto_accept = no

	ai_accept = {
		base = 0 # Try to make it 0 for most interactions

		modifier = {
			scope:hook = yes
			add = 50
			desc = SCHEME_WEAK_HOOK_USED
		}
		opinion_modifier = { # Opinion Factor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 0.25
			desc = AI_SIMPLE_OPINION_REASON
		}
		modifier = {
			add = ai_zeal
			ai_zeal < 0
			desc = TAKE_THE_VOWS_SKEPTIC
		}
		modifier = {
			add = {
				value = ai_zeal
				divide = 2
			}
			ai_zeal > 0
			desc = TAKE_THE_VOWS_ZEALOUS
		}
		modifier = {
			add = {
				value = ai_greed
				multiply = -1
			}
			ai_greed > 0
			desc = TAKE_THE_VOWS_GREED
		}
		modifier = {
			add = 50
			scope:recipient = {
				age >= 45
				is_visibly_fertile = no
				NOT = {
					any_heir_title = {
						exists = holder
					}
				}
			}
			desc = TAKE_THE_VOWS_RETIRE_IN_CHURCH
		}
		modifier = {
			add = 50
			exists = scope:actor.cp:councillor_court_chaplain
			scope:recipient = {
				OR = {
					has_relation_lover = scope:actor.cp:councillor_court_chaplain
					has_relation_friend = scope:actor.cp:councillor_court_chaplain
					has_secret_relation_lover = scope:actor.cp:councillor_court_chaplain
					has_relation_soulmate = scope:actor.cp:councillor_court_chaplain
					has_relation_best_friend = scope:actor.cp:councillor_court_chaplain
					opinion = {
						target = scope:actor.cp:councillor_court_chaplain
						value >= very_high_positive_opinion
					}
				}
			}
			desc = TAKE_THE_VOWS_INSPIRING_COURT_CHAPLAIN
		}
		modifier = {
			add = 50
			scope:recipient = {
				OR = {
					any_relation = {
						type = friend
						is_clergy = yes
					}
					any_relation = {
						type = best_friend
						is_clergy = yes
					}
					any_relation = {
						type = lover
						is_clergy = yes
					}
					any_relation = {
						type = soulmate
						is_clergy = yes
					}
					any_relation = {
						type = crush
						is_clergy = yes
					}
					any_secret = {
						secret_type = secret_lover
						secret_target = {	
							is_clergy = yes
						}
					}
				}
			}
			desc = TAKE_THE_VOWS_INSPIRING_CLERGY
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_education_learning_trigger = yes
			}
			desc = TAKE_THE_VOWS_LEARNING_EDUCATION
		}
		
		modifier = {
			add = {
				add = 20
				multiply = scope:recipient.num_virtuous_traits
			}
			scope:recipient.num_virtuous_traits > 0
			desc = TAKE_THE_VOWS_VIRTUOUS
		}
		
		modifier = {
			add = {
				add = -20
				multiply = scope:recipient.num_sinful_traits
			}
			scope:recipient.num_sinful_traits > 0
			desc = TAKE_THE_VOWS_SINFUL
		}

		#Positive Personality Modifiers
		modifier = { # Wants to help people
			add = {
				value = ai_compassion
				divide = 2
			}
			scope:recipient = {
				ai_compassion > 0
				has_trait = lifestyle_physician
			}
			desc = TAKE_THE_VOWS_PHYSICIAN_WANTS_TO_HELP
		}
		modifier = {
			add = 1200
			scope:recipient = {
				has_trait = reclusive
			}
			desc = TAKE_THE_VOWS_RECLUSIVE
		}
		modifier = {
			add = 25
			scope:recipient = {
				has_trait = curious
			}
			desc = TAKE_THE_VOWS_CURIOUS
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_trait = pensive
			}
			desc = TAKE_THE_VOWS_PENSIVE
		}
		modifier = { # Loves books & knowledge!
			add = 20
			scope:recipient = {
				has_trait = lifestyle_mystic
			}
			desc = TAKE_THE_VOWS_MYSTIC
		}
		modifier = { # Loves books & knowledge!
			add = 20
			scope:recipient = {
				has_trait = scholar
			}
			desc = TAKE_THE_VOWS_SCHOLAR
		}
		modifier = { # Loves books & knowledge!
			add = 20
			scope:recipient = {
				has_trait = theologian
			}
			desc = TAKE_THE_VOWS_THEOLOGIAN
		}
		modifier = { # Plants!
			add = 20
			scope:recipient = {
				has_trait = lifestyle_herbalist
			}
			desc = TAKE_THE_VOWS_HERBALIST
		}
		modifier = {
			add = 25
			scope:recipient = {
				has_trait = temperate
			}
			desc = TAKE_THE_VOWS_TEMPERATE
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_trait = celibate
			}
			desc = TAKE_THE_VOWS_CELIBATE
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_trait = chaste
			}
			desc = TAKE_THE_VOWS_CHASTE
		}
		modifier = {
			add = 25
			scope:recipient = {
				has_trait = content
			}
			desc = TAKE_THE_VOWS_CONTENT
		}
		modifier = {
			add = 25
			scope:recipient = {
				has_trait = humble
			}
			desc = TAKE_THE_VOWS_HUMBLE
		}
		modifier = {
			add = 10
			scope:recipient = {
				has_trait = drunkard
			}
			desc = TAKE_THE_VOWS_DRUNKARD
		}
		modifier = {
			add = 10
			scope:recipient = {
				has_trait = hashishiyah
			}
			desc = TAKE_THE_VOWS_HASHISHIYAH
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_trait = trusting
			}
			desc = TAKE_THE_VOWS_TRUSTING
		}

		#Negative Personality Modifiers
		modifier = {
			add = -20
			scope:recipient = {
				has_trait = rowdy
			}
			desc = TAKE_THE_VOWS_ROWDY
		}
		modifier = {
			add = -20
			scope:recipient = {
				has_trait = bossy
			}
			desc = TAKE_THE_VOWS_BOSSY
		}
		modifier = {
			add = -20
			scope:recipient = {
				has_trait = gluttonous
			}
			desc = TAKE_THE_VOWS_GLUTTONOUS
		}
		modifier = {
			add = -20
			scope:recipient = {
				has_trait = lustful
			}
			desc = TAKE_THE_VOWS_LUSTFUL
		}
		modifier = {
			add = -500
			scope:recipient = {
				has_trait = pregnant
			}
			desc = TAKE_THE_VOWS_PREGNANT
		}
		modifier = {
			add = -500
			scope:recipient = {
				has_trait = ambitious
			}
			desc = TAKE_THE_VOWS_AMBITIOUS
		}
		
		modifier = {
			add = -500
			scope:recipient = {
				OR = {
					is_married = yes
					exists = betrothed
				}
			}
			desc = TAKE_THE_VOWS_MARRIED_OR_BETROTHED
		}
		
		modifier = {
			add = -150
			scope:recipient = {
				is_primary_heir_of = scope:actor
			}
			desc = TAKE_THE_VOWS_PRIMARY_HEIR
		}
		
		modifier = {
			add = -75
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value == 2
				}
			}
			desc = TAKE_THE_VOWS_SECOND_HEIR
		}
		
		modifier = {
			add = -15
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value == 3
				}
			}
			desc = TAKE_THE_VOWS_THIRD_HEIR
		}
		
		modifier = {
			add = 25
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value >= 3
				}
			}
			desc = TAKE_THE_VOWS_HEIR
		}

		modifier = {
			add = 50
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value >= 6
				}
			}
			desc = TAKE_THE_VOWS_HEIR
		}

		modifier = {
			add = 50
			scope:recipient = {
				has_trait = bastard
			}
		}
		
		modifier = {
			add = -100
			scope:recipient = {
				NOT = { is_heir_of = scope:actor }
				any_heir_title = {
					exists = holder
					NOT = {
						holder = scope:actor
					}
					place_in_line_of_succession = {
						target = scope:recipient
						value < 2
					}
				}
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			desc = TAKE_THE_VOWS_HEIR_TO_OTHER_TITLE
		}
		
		modifier = {
			add = -50
			scope:recipient = {
				NOT = { is_heir_of = scope:actor }
				any_heir_title = {
					exists = holder
					NOT = {
						holder = scope:actor
					}
					place_in_line_of_succession = {
						target = scope:recipient
						value < 5
					}
					NOT = {
						place_in_line_of_succession = {
							target = scope:recipient
							value < 2
						}
					}
				}
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			desc = TAKE_THE_VOWS_IN_LINE_TO_OTHER_TITLE
		}
		
		modifier = { #Rivalry modifier.
			desc = offer_vassalization_interaction_aibehavior_rival_tt
			trigger = {
				scope:recipient = {
					has_relation_rival = scope:actor
					NOT = { has_relation_nemesis = scope:actor }
				}
			}
			add = -50
		}
		modifier = { #Nemesis modifier.
			desc = offer_vassalization_interaction_aibehavior_nemesis_tt
			trigger = {
				scope:recipient = {
					has_relation_nemesis = scope:actor
				}
			}
			add = -100
		}
		
		#Dread modifiers
		modifier = {
			add = 25
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
		
		# Culture Tradition modifiers
		
		modifier = {
			add = {
				value = 25
				if = {
					limit = {
						scope:recipient = {
							is_adult = no
							is_child_of = scope:actor
						}
					}
					add = 100
				}
			}
			scope:actor.culture = { has_cultural_parameter = monastic_expectations }
			desc = MONASTIC_EXPECTATIONS_REASON
		}
	}
	
	# AI will do
	
	ai_potential = {
		is_adult = yes
		piety >= major_piety_value
		NOT = {
			faith = faith:orthodox
		}
	}
			
	ai_target_quick_trigger = {
		adult = yes
	}

	ai_targets = {
		ai_recipients = courtiers
		max = 5
	}

	ai_targets = {
		ai_recipients = children
	}
	
	ai_frequency = 72

	ai_will_do = {
		base = 0
		
		modifier = { # The AI will always use a Hook
			scope:hook = yes
			add = 1
		}

		modifier = { # Try to send rivals
			add = 100
			scope:actor = {
				OR = {
					has_relation_rival = scope:recipient
					has_relation_nemesis = scope:recipient
				}
			}
		}
		
		modifier = { # Try to send people who would make poor heirs
			add = 50
			scope:recipient = {
				OR = {
					has_trait = murderer
					has_trait = incestuous
					has_trait = sodomite
					has_trait = cannibal
					has_trait = deviant
					has_trait = kinslayer
					has_trait = adulterer
					has_trait = fornicator
					has_trait = maimed
					has_trait = drunkard
					has_trait = hashishiyah
					has_trait = flagellant
					has_trait = reclusive
					num_of_bad_genetic_traits >= 1
					num_sinful_traits >= 2
				}
				scope:actor.primary_title = {
					place_in_line_of_succession = {
						target = prev
						value <= 7
					}
				}
			}
		}

		modifier = { # Try to send people who would make poor heirs
			add = 25
			scope:recipient = {
				is_adult = yes
				calc_true_if = {
					amount >= 3
					
					diplomacy < 8
					stewardship < 8
					martial < 8
					intrigue < 8
					learning < 8
				}
				scope:actor.primary_title = {
					place_in_line_of_succession = {
						target = prev
						value <= 7
					}
				}
			}
		}

		modifier = { # Sending one of your heirs is almost customary
			add = 100
			scope:actor = {
				any_child = {
					count >= 3
				}
				NOT = {
					any_child = {
						OR = {
							has_trait = devoted
							has_trait = order_member
						}
					}
				}
			}
			scope:recipient = {
				is_child_of = scope:actor
				has_education_learning_trigger = yes
			}
		}
		
		modifier = { # Zealous characters generally want to send characters to the clergy
			add = 50
			scope:actor = {
				ai_zeal >= high_positive_ai_value
			}
			scope:recipient = {
				has_education_learning_trigger = yes
			}
		}

		modifier = { # Greedy characters want to rid their court of potential threats
			add = 50
			scope:actor = {
				ai_greed >= medium_positive_ai_value
				any_child = {
					count >= 1
				}
			}
			scope:recipient = {
				NOT = {
					is_child_of = scope:actor
				}
				any_claim = {
					exists = holder
					holder = scope:actor
				}
			}
		}

		modifier = {
			add = 200
			scope:actor = {
				highest_held_title_tier = tier_county
			}
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value >= 3
				}
			}
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_trait = chaste
			}
		}
		modifier = {
			add = 100
			scope:recipient = {
				has_trait = pensive
			}
		}
		modifier = {
			add = 100
			scope:actor = {
				highest_held_title_tier = tier_duchy
			}
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value >= 3
				}
			}
		}
		modifier = {
			add = 100
			scope:actor = {
				highest_held_title_tier = tier_kingdom
			}
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value >= 3
				}
			}
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_trait = bastard
			}
		}
		modifier = {
			add = -150
			scope:recipient = {
				is_female = yes
			}
		}
		modifier = {
			factor = 0
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value <= 2
				}
			}
		}
		
		modifier = { # The AI doesn't ask married/betrothed people
			factor = 0
			scope:recipient = {
				OR = {
					exists = betrothed
					is_married = yes
				}
			}
		}
		
		modifier = { # Never ask Primary Heir
			factor = 0
			scope:recipient = {
				is_primary_heir_of = scope:actor
			}
		}
		
		modifier = { # Only care about family
			factor = 0
			scope:recipient = {
				NOT = {
					is_close_or_extended_family_of = scope:actor
				}
			}
		}
	}
}

select_cardinal_candidate_interaction = {
	category = interaction_category_religion

	
	populate_recipient_list = {
		scope:recipient = {
			#Any member of your own house.
			house = {
				every_house_member = {
					limit = {
						# Can not select them self as beneficiary
						NOT = { this = scope:recipient }
						# Capable adults
						is_male = yes
						is_capable_adult = yes
						is_imprisoned = no
						is_married = no
						is_betrothed = no
						is_ruler = no
						is_clergy = yes
						is_cardinal = no
						# In minimum good standing with faith
						NOT = { has_trait = excommunicated }
					}
					add_to_list = characters
				}
			}
			#Any nearby family member who is of your dynasty, even if they're a separate house.
			every_close_or_extended_family_member = {
				limit = {
					dynasty = scope:recipient.dynasty
					NOT = { house = scope:recipient.house }
					is_male = yes
					is_capable_adult = yes
					is_imprisoned = no
					is_married = no
					is_betrothed = no
					is_ruler = no
					is_clergy = yes
					is_cardinal = no
					# In minimum good standing with faith
					NOT = { has_trait = excommunicated }
				}
				add_to_list = characters
			}
			#And then any landless heads of minor houses in your dynasty.
			dynasty = {
				every_dynasty_member = {
					limit = {
						is_male = yes
						is_capable_adult = yes
						is_imprisoned = no
						is_married = no
						is_betrothed = no
						# In minimum good standing with faith
						NOT = { has_trait = excommunicated }
						is_ruler = no
						is_clergy = yes
						is_cardinal = no
					}
					add_to_list = characters
				}
			}
			every_courtier_or_guest = {
				limit = {
					AND = {
						is_male = yes
						is_adult = yes
						#And they have to actually like you enough to want to invest you.
						#opinion = {
						#	target = root
						#	value >= 0
						#}
						learning >= 7
						is_ruler = no
						is_clergy = yes
						is_cardinal = no
					}
					#always = yes
				}
				add_to_list = characters
			}
			every_vassal_or_below = {
				limit = {
					AND = {
						is_male = yes
						is_clergy = yes
						is_cardinal = no
					}
				}
				add_to_list = characters
			}
		}
	}
	
	auto_accept = yes
	
	is_shown = {
		is_male = yes
		is_capable_adult = yes
		is_imprisoned = no
		is_married = no
		is_betrothed = no
		is_ruler = no
		is_clergy = yes
		is_cardinal = no
		# In minimum good standing with faith
		NOT = { has_trait = excommunicated }
	}

	
	
	can_be_picked = {
		is_adult = yes
		is_ruler = no
		is_cardinal = no
		faith = scope:actor.faith
		custom_tooltip = {
			text = ghw_heir_to_a_title
			NOT = {
				any_heir_title = {} # Not heir to anything
			}
		}
		custom_tooltip = {
			text = ghw_married_to_a_ruler
			OR = { #Either not married, or not married to a ruler.
				is_married = no
				NOT = {
					any_spouse = {
						is_ruler = yes
					}
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:secondary_recipient = {
			NOR = {
				has_trait = excommunicated
				has_trait = incapable
				has_trait = devoted
				has_serious_disease_trigger = yes
			}
			faith = scope:actor.faith
			is_adult = yes
			#is_ruler = no
			# NOT = {
			# 	any_heir_title = {} # Not heir to anything
			# }
			OR = { #Either not married, or not married to a ruler.
				is_married = no
				NOT = {
					any_spouse = {
						is_ruler = yes
					}
				}
			}
		}
		scope:recipient = { is_busy_in_events_localised = yes }
	}
	
	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = select_cardinal_candidate_interaction_notification

				right_icon = scope:secondary_recipient

				set_variable = {
					name = cardinal_player_candidate
					value = scope:secondary_recipient
				}
				set_variable = {
					name = has_set_cardinal_player_candidate
					value = scope:secondary_recipient
				}
				scope:secondary_recipient = {
					set_variable = {
						name = is_a_set_cardinal_player_candidate
						value = yes
					}
				}
			}
		}
	}
	ai_will_do = {
		base = 0 #Assigned directly by event for the AI.
	}
}

# select_investiture_candidate_interaction = {
# 	category = interaction_category_religion

	
# 	populate_recipient_list = {
# 		scope:recipient = {
# 			#Any member of your own house.
# 			house = {
# 				every_house_member = {
# 					limit = {
# 						# Can not select them self as beneficiary
# 						NOT = { this = scope:recipient }
# 						# Capable adults
# 						is_male = yes
# 						is_capable_adult = yes
# 						is_imprisoned = no
# 						is_married = no
# 						is_betrothed = no
# 						is_ruler = no
# 						# In minimum good standing with faith
# 						NOT = { has_trait = excommunicated }
# 					}
# 					add_to_list = characters
# 				}
# 			}
# 			#Any nearby family member who is of your dynasty, even if they're a separate house.
# 			every_close_or_extended_family_member = {
# 				limit = {
# 					dynasty = scope:recipient.dynasty
# 					NOT = { house = scope:recipient.house }
# 					is_male = yes
# 					is_capable_adult = yes
# 					is_imprisoned = no
# 					is_married = no
# 					is_betrothed = no
# 					is_ruler = no
# 					# In minimum good standing with faith
# 					NOT = { has_trait = excommunicated }
# 				}
# 				add_to_list = characters
# 			}
# 			#And then any landless heads of minor houses in your dynasty.
# 			dynasty = {
# 				every_dynasty_member = {
# 					limit = {
# 						is_male = yes
# 						is_capable_adult = yes
# 						is_imprisoned = no
# 						is_married = no
# 						is_betrothed = no
# 						# In minimum good standing with faith
# 						NOT = { has_trait = excommunicated }
# 						is_ruler = no
# 					}
# 					add_to_list = characters
# 				}
# 			}
# 			every_courtier_or_guest = {
# 				limit = {
# 					AND = {
# 						is_male = yes
# 						#And they have to actually like you enough to want to invest you.
# 						opinion = {
# 							target = root
# 							value >= 0
# 						}
# 						learning >= 7
# 						is_ruler = no
# 					}
# 				}
# 			}
# 		}
# 	}
	
# 	auto_accept = yes
	
# 	is_shown = {
# 		exists = scope:actor.faith.great_holy_war
# 		scope:actor = {
# 			exists = faith.great_holy_war
# 			this = scope:recipient
# 			is_pledged_ghw_attacker = yes
# 		}
# 		NOT = { scope:actor = scope:recipient.faith.great_holy_war.ghw_war_declarer } #Not for the Caliph himself.
# 	}
	
# 	can_be_picked = {
# 		is_adult = yes
# 		is_ruler = no
# 		faith = scope:actor.faith
# 		custom_tooltip = {
# 			text = ghw_heir_to_a_title
# 			NOT = {
# 				any_heir_title = {} # Not heir to anything
# 			}
# 		}
# 		custom_tooltip = {
# 			text = ghw_married_to_a_ruler
# 			OR = { #Either not married, or not married to a ruler.
# 				is_married = no
# 				NOT = {
# 					any_spouse = {
# 						is_ruler = yes
# 					}
# 				}
# 			}
# 		}
# 	}

# 	has_valid_target_showing_failures_only = {
# 		scope:secondary_recipient = {
# 			NOR = {
# 				has_trait = excommunicated
# 				has_trait = incapable
# 				has_trait = devoted
# 				has_serious_disease_trigger = yes
# 			}
# 			faith = scope:actor.faith
# 			is_adult = yes
# 			is_ruler = no
# 			NOT = {
# 				any_heir_title = {} # Not heir to anything
# 			}
# 			OR = { #Either not married, or not married to a ruler.
# 				is_married = no
# 				NOT = {
# 					any_spouse = {
# 						is_ruler = yes
# 					}
# 				}
# 			}
# 		}
# 		scope:recipient = { is_busy_in_events_localised = yes }
# 	}
	
# 	on_accept = {
# 		scope:actor = {
# 			send_interface_toast = {
# 				title = select_ghw_beneficiary_interaction_notification

# 				right_icon = scope:secondary_recipient

# 				scope:secondary_recipient = {
# 					investiture_set_up_candidate = yes
# 				}
# 			}
# 		}
# 	}
# 	ai_will_do = {
# 		base = 0 #Assigned directly by event for the AI.
# 	}
# }