deciding_upon_saint_effect = { ##DECIDING SAINT
	random = {
		chance = 100


		#Cynical people are less likely to be Canonized
		modifier = {
			factor = 0.8
			has_trait = cynical
		}

		# Reduced chance for Popes / Antipopes to become Saints
		# modifier = {
		# 	factor = 0.4
		# 	OR = {
		# 		has_title = title:k_papal_state
		# 		#has_claim_on = title:k_papal_state
		# 	}
		# }

		# #Have to be a Christian denomination with a potential Religious head, and have been singled out for Beatification
		# modifier = {
		# 	factor = 0
		# 	scope:saint_person = {
		# 		has_character_flag = beatified
		# 	}
		# 	NOR = {
		# 		scope:saint_person.faith = faith:catholic
		# 		scope:saint_person.faith = faith:orthodox
		# 		scope:saint_person.faith = faith:iconoclast
		# 		scope:saint_person.faith = faith:nestorian
		# 		scope:saint_person.faith = faith:insular_celtic
		# 		scope:saint_person.faith = faith:paulician
		# 	}
		# }

		#Religions without a Religious Head cannot Canonize
		modifier = {
			factor = 0 

			# Why was this so hard to write?
			NOT = { exists = { scope:saint_person.faith.religious_head } }
		}
		#Eastern Christians have a lower chance of becoming Saints
		modifier = {
			factor = 0.8
			OR = {
				# Why did I have to fix this? You had it properly done just above
				scope:saint_person.faith = faith:iconoclast
				scope:saint_person.faith = faith:nestorian
				scope:saint_person.faith = faith:insular_celtic
				scope:saint_person.faith = faith:paulician
				scope:saint_person.faith = faith:orthodox
			}
		}
		#Players who don't have a saintly bloodline have a higher chance of becoming a Saint
		modifier = {
			factor = 2
			scope:saint_person = {
				is_ai = no
			}
			NOT = {
				scope:saint_person = {
					exists = dynasty
					dynasty = {
						has_dynasty_modifier = saintly_bloodline
					}
				}
			}
		}

		#Positive traits increase your chances of becoming a Saint
		modifier = {
			factor = 1.5
			scope:saint_person = {
				has_trait = patient
			}
		}
		modifier = {
			factor = 1.5
			scope:saint_person = {
				has_trait = diligent
			}
		}
		modifier = {
			factor = 1.5
			scope:saint_person = {
				has_trait = compassionate
			}
		}
		modifier = {
			factor = 1.5
			scope:saint_person = {
				has_trait = chaste
			}
		}
		modifier = {
			factor = 1.5
			scope:saint_person = {
				has_trait = generous
			}
		}
		modifier = {
			factor = 1.5
			scope:saint_person = {
				has_trait = temperate
			}
		}
		modifier = {
			factor = 1.5
			scope:saint_person = {
				has_trait = humble 
			}
		}
		modifier = {
			factor = 1.2
			scope:saint_person = {
				has_trait = just
			}
		}
		modifier = {
			factor = 1.2
			scope:saint_person = {
				has_trait = crusader
			}
		}
		#Having the bloodline of a Saint severely decrease your chance of becoming a Saint
		modifier = {
			factor = 0.2
			scope:saint_person = {
				exists = dynasty
				dynasty = {
					has_dynasty_modifier = saintly_bloodline
				}
			}
		}
		#Extra high piety increases your chance of becoming a Saint
		# It's >= for christs' sake!
		modifier = {
			factor = 1.2
			piety >= 1000
		}
		modifier = {
			factor = 1.2 
			piety >= 1500
		}
		modifier = {
			factor = 1.2
			piety >= 2000
		}
		modifier = {
			factor = 1.2
			piety >= 2500
		}
		modifier = {
			factor = 1.2
			piety >= 3000
		}
		modifier = {
			factor = 1.2
			piety >= 3500
		}
		modifier = {
			factor = 1.2
			piety >= 4000
		}
		modifier = {
			factor = 1.2
			piety >= 4500
		}
		modifier = {
			factor = 1.2
			piety >= 5000
		}
		modifier = {
			factor = 1.2
			piety >= 5500
		}
		modifier = {
			factor = 1.2
			piety >= 6000
		}
		modifier = {
			factor = 1.2
			piety >= 6500
		}
		modifier = {
			factor = 1.2 
			piety >= 7000
		}
		modifier = {
			factor = 1.2
			piety >= 7500
		}
		modifier = {
			factor = 1.2
			piety >= 8000
		}
		modifier = {
			factor = 1.2
			piety >= 8500
		}
		modifier = {
			factor = 1.2
			piety >= 9000
		}
		modifier = {
			factor = 1.2
			piety >= 9500
		}
		modifier = {
			factor = 1.2
			piety >= 10000
		}

		#Level of Piety
		modifier = {
			factor = {
				value = 1
				add = {
					add = piety_level
					multiply = 0.2
				}
			}
		}

		#First Saint of a Religion is easier
		modifier = {
			factor = 3
			# Switches are your friend, Uber...
			scope:saint_person = {
				switch = {
					trigger = faith
					faith:iconoclast = { NOT = { has_global_variable = iconoclast_saint } }
					faith:nestorian = { NOT = { has_global_variable = nestorian_saint } }
					faith:insular_celtic = { NOT = { has_global_variable = insular_celtic_saint } }
					faith:paulician = { NOT = { has_global_variable = paulician_saint } }
					faith:orthodox = { NOT = { has_global_variable = orthodox_saint } }
					faith:catholic = { NOT = { has_global_variable = catholic_saint } }
					faith:iconoclast = { NOT = { has_global_variable = iconoclast_saint } }
				}
			}
		}

		# What even is this?!
		#random_realm_province.holder.top_liege = {
		#	trigger_event = KoH_sainthood.3
		#}
		random_realm_province = {
			province_owner.top_liege = {
				trigger_event = KoH_sainthood.3
			}
		}
		change_variable = { name = global_saint_number add = 1 }

		scope:saint_person = {
			switch = {
				trigger = scope:saint_person.faith
				faith:iconoclast = { set_global_variable = iconoclast_saint }
				faith:nestorian = { set_global_variable = nestorian_saint }
				faith:insular_celtic = { set_global_variable = insular_celtic_saint }
				faith:paulician = { set_global_variable = paulician_saint }
				faith:orthodox = { set_global_variable = orthodox_saint }
				faith:catholic = { set_global_variable = catholic_saint }
			}
		}
	}
}


become_saint = {
	save_scope_as = new_saint
	scope:new_saint.capital_county = {
		save_scope_as = saint_capital
	}

	faith = {
		add_to_variable_list = {
			name = faith_saints
			target = scope:new_saint
		}
	}

	scope:saint_capital.title_province = {
		add_province_modifier = saintly_tomb
	}
	scope:saint_capital.county ={
		add_to_variable_list = {
			name = faith_saints_and_capital
			target = scope:new_saint
		}
	}

	dynasty = {
		add_dynasty_modifier = {
			modifier = saintly_bloodline
			# Why even bother at this point?
		}
		every_dynasty_member = {
			limit = { is_alive = yes }
			add_piety = 300
		}
		add_dynasty_prestige_level = 1 # Why was this placed outside the dynasty scope??
	}
}



become_saint_capital = {
	save_scope_as = new_saint_capital
}

remove_saint = {
	save_scope_as = remove_saint # Good work on avoiding ROOT
	faith = {
		remove_list_variable = {
			name = faith_saints
			target = scope:remove_saint
		}
	}
}

add_qa_effect = {
	set_global_variable = qa_testing
}

# #set_up_saint_sites_for_selection_effect = {
# 	if = {
# 		limit = { NOT = { exists = scope:has_set_up_saint_sites } }
# 		save_temporary_scope_as = pilgrim
		
# 		random_in_list = {
# 			variable = faith_capital

# 			if = {
# 				limit = {
# 					NOT = { exists = scope:saint_site_1 }
# 				}
# 				save_scope_as = saint_site_1
# 			}

# 			else_if = {
# 				limit = {
# 					NOT = { exists = scope:saint_site_2 }
# 				}
# 				save_scope_as = saint_site_2
# 			}

# 			else_if = {
# 				limit = {
# 					NOT = { exists = scope:saint_site_7 }
# 				}
# 				save_scope_as = saint_site_3
# 			}

# 			else_if = {
# 				limit = {
# 					NOT = { exists = scope:saint_site_7 }
# 				}
# 				save_scope_as = saint_site_4
# 			}

# 			else_if = {
# 				limit = {
# 					NOT = { exists = scope:saint_site_7 }
# 				}
# 				save_scope_as = saint_site_5
# 			}

# 			else_if = {
# 				limit = {
# 					NOT = { exists = scope:saint_site_7 }
# 				}
# 				save_scope_as = saint_site_6
# 			}

# 			else_if = {
# 				limit = {
# 					NOT = { exists = scope:saint_site_7 }
# 				}
# 				save_scope_as = saint_site_7
# 			}

# 			else_if = {
# 				limit = {
# 					NOT = { exists = scope:saint_site_8 }
# 				}
# 				save_scope_as = saint_site_8
# 			}

# 			else_if = {
# 				limit = {
# 					NOT = { exists = scope:saint_site_9 }
# 				}
# 				save_scope_as = saint_site_9
# 			}
# 			else = {
# 				debug_log = "Holy Site failed to get an assigned scope slot!"
# 				debug_log_scopes = yes
# 			}
# 		}	
# 		save_temporary_scope_value_as = {
# 			name = has_set_up_pilgrimage_sites
# 			value = yes
# 		}
# 	}
# 	# Debug checks:
# 	if = {
# 		limit = { NOT = { exists = scope:holy_site_1 } }
# 		debug_log = "No holy sites found in faith! (Except possibly mecca)"
# 		root.faith = {
# 			save_scope_as = current_faith
# 		}
# 		debug_log_scopes = yes
# 	}
# #}

set_up_saint_sites_for_selection_effect = {	
	random_province = {
		limit = {
			has_province_modifier = saintly_tomb
			NOT = { exists = scope:saint_site_1 }
		}
		save_scope_as = saint_site_1
	}
}

saint_site_selection_event_option_effect = {
	# HOLY_SITE = holy_site
	hidden_effect = {
		set_variable = {
			name = pilgrimage_cooldown_timer
			years = pilgrimage_cooldown_year_amount
		}
	}

	scope:saint_site_1 = {
		spawn_activity = {
			owner = root
			type = activity_pilgrimage
		}
	}
	if = {
		limit = { is_ai = no }
		calculate_pilgrimage_distance_effect = {
			PILGRIM = root
			HOLY_SITE = scope:saint_site_1
		}
	}
}

pledge_ghw_piety_gain_effect = {
	if = {
		limit = { highest_held_title_tier = 5 }
		add_piety = 150
	}
	if = {
		limit = { highest_held_title_tier = 4 }
		add_piety = 120
	}
	if = {
		limit = { highest_held_title_tier = 3 }
		add_piety = 90
	}
	if = {
		limit = { highest_held_title_tier = 2 }
		add_piety = 60
	}
	if = {
		limit = { highest_held_title_tier = 1 }
		add_piety = 30
	}
	faith = {
		if = {
			limit = {
				exists = religious_head
				exists = great_holy_war
				religious_head = {
					has_title = title:k_papal_state
					NOT = { exists = var:ChangedCrusadeLeader }
				}
				exists = title:d_captain_general_church.holder
			}
			religious_head = {
				set_variable = {
					name = ChangedCrusadeLeader
					value = yes
					years = 30
				}
			}
			great_holy_war = {
				set_war_declarer = title:d_captain_general_church.holder
				if = {
					limit = {
						NOT = { has_pledged_attacker = title:d_captain_general_church.holder }
					}
					pledge_attacker = title:d_captain_general_church.holder
				}
			}
		}
	}
}

testingtest = {
	save_scope_as = persontoscope
    scope:persontoscope.capital_county = {
        save_scope_as = scoped_capital
    }
    scope:scoped_capital.county ={
        add_to_variable_list = {
            name = characterscopedandcountyscoped
            target = scope:persontoscope
        }
    }
}

testinglist = {
	every_in_list = { variable = characterscopedandcountyscoped add_trait = hashishiyah }
}