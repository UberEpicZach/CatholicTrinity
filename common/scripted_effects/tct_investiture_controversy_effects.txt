investiture_controversy_struggle_apply_imperial_supporter_papal_supporter_war_won_catalysts_effect = {
	#This is scope:attacker scope
	## Unfair wars.
	if = {
		limit = {
			has_trait = tct_imperial_supporter
			scope:defender = {
				has_trait = tct_papal_supporter
			}
			highest_held_title_tier > scope:loser.highest_held_title_tier
			scope:war = {
				NOT = { has_variable = used_for_struggle_catalyst_on_war_ended }
			}
			any_character_struggle = {
				involvement = involved
				activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
					CATALYST = tct_catalyst_supporter_win_unfair_war_within_the_region
					CHAR = scope:loser
				}
			}
		}
		every_character_struggle = {
			involvement = involved
			limit = {
				activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
					CATALYST = tct_catalyst_supporter_win_unfair_war_within_the_region
					CHAR = scope:loser
				}
			}
			activate_struggle_catalyst = {
				catalyst = tct_catalyst_supporter_win_unfair_war_within_the_region
				character = scope:winner
			}
			scope:war = { set_variable = used_for_struggle_catalyst_on_war_ended }
			#log_debug_variable_for_persian_struggle_effect = { VAR = stabil_tct_catalyst_supporter_win_unfair_war_within_the_region }
		}
	}
	## Fair wars.
	else_if = {
		limit = {
			has_trait = tct_imperial_supporter
			scope:defender = {
				has_trait = tct_papal_supporter
			}
			highest_held_title_tier <= scope:loser.highest_held_title_tier
			scope:war = {
				NOT = { has_variable = used_for_struggle_catalyst_on_war_ended }
			}
			any_character_struggle = {
				involvement = involved
				activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
					CATALYST = tct_catalyst_supporter_win_fair_war_within_the_region
					CHAR = scope:loser
				}
			}
		}
		every_character_struggle = {
			involvement = involved
			limit = {
				activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
					CATALYST = tct_catalyst_supporter_win_fair_war_within_the_region
					CHAR = scope:loser
				}
			}
			activate_struggle_catalyst = {
				catalyst = tct_catalyst_supporter_win_fair_war_within_the_region
				character = scope:winner
			}
			scope:war = { set_variable = used_for_struggle_catalyst_on_war_ended }
			#log_debug_variable_for_persian_struggle_effect = { VAR = stabil_tct_catalyst_supporter_win_fair_war_within_the_region }
		}
	}
	# During the Investiture Controversy Struggle, a Papal Supporter wins any war in the region.
	## Unfair wars.
	else_if = {
		limit = {
			has_trait = tct_papal_supporter
			scope:defender = {
				has_trait = tct_imperial_supporter
			}
			highest_held_title_tier > scope:loser.highest_held_title_tier
			scope:war = {
				NOT = { has_variable = used_for_struggle_catalyst_on_war_ended }
			}
			any_character_struggle = {
				involvement = involved
				activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
					CATALYST = tct_catalyst_detractor_win_unfair_war_within_the_region
					CHAR = scope:loser
				}
			}
		}
		every_character_struggle = {
			involvement = involved
			limit = {
				activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
					CATALYST = tct_catalyst_detractor_win_unfair_war_within_the_region
					CHAR = scope:loser
				}
			}
			activate_struggle_catalyst = {
				catalyst = tct_catalyst_detractor_win_unfair_war_within_the_region
				character = scope:winner
			}
			scope:war = { set_variable = used_for_struggle_catalyst_on_war_ended }
			#log_debug_variable_for_persian_struggle_effect = { VAR = unrest_tct_catalyst_detractor_win_unfair_war_within_the_region }
		}
	}
	## Fair wars.
	else_if = {
		limit = {
			has_trait = tct_papal_supporter
			scope:defender = {
				has_trait = tct_imperial_supporter
			}
			highest_held_title_tier <= scope:loser.highest_held_title_tier
			scope:war = {
				NOT = { has_variable = used_for_struggle_catalyst_on_war_ended }
			}
			any_character_struggle = {
				involvement = involved
				activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
					CATALYST = tct_catalyst_detractor_win_fair_war_within_the_region
					CHAR = scope:loser
				}
			}
		}
		every_character_struggle = {
			involvement = involved
			limit = {
				activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
					CATALYST = tct_catalyst_detractor_win_fair_war_within_the_region
					CHAR = scope:loser
				}
			}
			activate_struggle_catalyst = {
				catalyst = tct_catalyst_detractor_win_fair_war_within_the_region
				character = scope:winner
			}
			scope:war = { set_variable = used_for_struggle_catalyst_on_war_ended }
			#log_debug_variable_for_persian_struggle_effect = { VAR = unrest_tct_catalyst_detractor_win_fair_war_within_the_region }
		}
	}
}

##### Struggle Ending #####
end_investiture_controversy_struggle_effect = {
	if = {
		limit = {
			exists = title:e_hre.holder
			title:e_hre.holder = { has_character_modifier = fp3_struggle_caliph_super_suspicious_modifier }
		}
		title:e_hre.holder = { remove_character_modifier = fp3_struggle_caliph_super_suspicious_modifier }
	}

	every_in_global_list = { # We de-flag chars (surprisingly performance friendly, from all possible options)
		variable = fp3_intro_flag_character_list
		if = {
			limit = { has_character_flag = fp3_struggle_intro_event_flag } # Since only alive chars have flags, we don't need to check for anything else
			remove_character_flag = fp3_struggle_intro_event_flag
		}
	}

	# Global variable tracking.
	## For usage in councillor tasks.
	set_global_variable = {
		name = fp3_struggle_ending
		value = $FLAG$
	}
	## For debug purposes.
	if = {
		limit = { gather_debug_variables_for_persian_struggle_trigger = yes }
		increment_global_variable_effect = {
			VAL = current_year
			VAR = sp_end_date
		}
	}

	every_player = {
		limit = { fp3_does_this_player_care_about_the_persian_struggle = yes } # Needs to be checked before the struggle ends due to race condition issues
		add_to_list = player_to_notify # Making a list so stuff is tiggered after the struggle ends, to make extra sure I don't break anything.
	}

	every_in_list = { # Then we *actually* notify palyers, making sure the struggle has already ended
		list = player_to_notify
		limit = {
			NOT = { this = root }
		}
		trigger_event = $EVENT$
	}
	struggle:investiture_controversy_struggle ?= { end_struggle = $ENDING$ }
}

investiture_controversy_struggle_switch_sides_sundry_changes_effect = {
	# More like notoriety, but potato-potatoe.
	if = {
		limit = {
			NOT = { exists = scope:prestige_gained }
		}
		add_prestige = medium_prestige_gain
	}
	# Are we getting an extra surcharge of stress?
	if = {
		limit = { tct_investiture_struggle_switch_sides_decision_liege_requirements_trigger = no }
		add_stress = major_stress_gain
	}
	# Plus check who the current caliph is so we can see who you swore to.
	set_variable = {
		name = switch_sides_decision_emperor
		value = title:e_hre.holder
	}
}

investiture_controversy_struggle_switch_sides_become_imperial_supporter_effect = {
	hidden_effect = { remove_trait = tct_papal_supporter }
	add_trait_force_tooltip = tct_imperial_supporter
	add_character_modifier = {
		modifier = investiture_controversy_struggle_switch_sides_support_emperor
		years = 20
	}
}

investiture_controversy_struggle_switch_sides_become_papal_supporter_effect = {
	hidden_effect = { remove_trait = tct_imperial_supporter }
	add_trait_force_tooltip = tct_papal_supporter
	add_character_modifier = {
		modifier = investiture_controversy_struggle_switch_sides_support_papal
		years = 20
	}
}

investiture_controversy_struggle_switch_sides_scripted_effect = {
	# Apply the appropriate modifier.
	## Neutrals pick in the event.
	if = {
		limit = {
			NOR = {
				has_trait = tct_imperial_supporter
				has_trait = tct_papal_supporter
			}
		}
		show_as_tooltip = {
			random_list = {
				# Become a imperial supporter.
				100 = {
					show_chance = no
					desc = fp3_name_read_in_friday_prayer_decision.tt.become_supporter
					investiture_controversy_struggle_switch_sides_become_imperial_supporter_effect = yes
				}
				# Become a papal supporter.
				100 = {
					show_chance = no
					desc = fp3_name_read_in_friday_prayer_decision.tt.become_detractor
					investiture_controversy_struggle_switch_sides_become_papal_supporter_effect = yes
				}
			}
		}
	}
	## Imperial Supporters become Papal Supporter.
	else_if = {
		limit = { has_trait = tct_imperial_supporter }
		investiture_controversy_struggle_switch_sides_become_papal_supporter_effect = yes
		struggle:investiture_controversy_struggle = {
			every_involved_ruler = {
				custom = custom.every_opposed_involved_struggle_ruler.imperal_supporter
				limit = {
					NOT = { this = root }
					has_trait = tct_imperial_supporter
				}
				add_opinion = {
					target = root
					modifier = turncoat_opinion
					opinion = -40
				}
			}
			every_interloper_ruler = {
				custom = custom.every_opposed_interloper_struggle_ruler.imperal_supporter
				limit = {
					NOT = { this = root }
					has_trait = tct_imperial_supporter
				}
				add_opinion = {
					target = root
					modifier = turncoat_opinion
					opinion = -20
				}
			}
		}
	}
	## Detractors become Supporters.
	else_if = {
		limit = { has_trait = tct_papal_supporter }
		investiture_controversy_struggle_switch_sides_become_imperial_supporter_effect = yes
		struggle:investiture_controversy_struggle = {
			every_involved_ruler = {
				custom = custom.every_opposed_involved_struggle_ruler.papal_supporter
				limit = {
					NOT = { this = root }
					has_trait = tct_papal_supporter
				}
				add_opinion = {
					target = root
					modifier = turncoat_opinion
					opinion = -40
				}
			}
			every_interloper_ruler = {
				custom = custom.every_opposed_interloper_struggle_ruler.detractor
				limit = {
					NOT = { this = root }
					has_trait = tct_papal_supporter
				}
				add_opinion = {
					target = root
					modifier = turncoat_opinion
					opinion = -20
				}
			}
		}
	}
	# Finish things off.
	investiture_controversy_struggle_switch_sides_sundry_changes_effect = yes
	#read_name_in_friday_prayer_guts_apply_house_unity_changes_effect = yes
}

hre_pope_opinion_check_catalyst_bad = {
	if = {
		limit = {
			title:e_hre.holder = {
				any_character_struggle = { phase_has_catalyst = tct_papal_hre_opinions_bad }
				opinion = {
					target = title:k_papal_state.holder
					value <= 0
				}
			}
			title:k_papal_state.holder = {
				opinion = {
					target = title:e_hre.holder
					value <= 0
				}
			}
		}
		title:e_hre.holder = {
			every_character_struggle = {
				activate_struggle_catalyst = {
					catalyst = tct_papal_hre_opinions_bad
					character = title:e_hre.holder
				}
			}
		}
	}
}

# decrease contractual obligations
autonomony_obligations_faction_contract_decrease_effect = {
	if = {
		limit = {
			vassal_contract_obligation_level:feudal_government_levies > vassal_contract_obligation_level:feudal_government_taxes
			vassal_contract_obligation_level_can_be_decreased = feudal_government_levies
		}
		vassal_contract_decrease_obligation_level = feudal_government_levies
	}
	else_if = {
		limit = {
			vassal_contract_obligation_level:feudal_government_taxes > vassal_contract_obligation_level:feudal_government_levies
			vassal_contract_obligation_level_can_be_decreased = feudal_government_taxes
		}
		vassal_contract_decrease_obligation_level = feudal_government_taxes
	}
	else = {
		if = {
			limit = { vassal_contract_obligation_level_can_be_decreased = feudal_government_taxes }
			vassal_contract_decrease_obligation_level = feudal_government_levies
		}
		else = { vassal_contract_decrease_obligation_level = feudal_government_taxes }
	}
	#hidden_effect = { set_vassal_contract_modification_blocked = yes }
}

investiture_hre_papal_opinion_effect = {
	# send_interface_toast = {
	# 	type = event_toast_effect_bad
	# 	title = HRE_DEBUG_TEST
	# 	left_icon = ROOT
	# }
	if = {
		limit = {
			title:e_hre.holder = {
				any_character_struggle = { phase_has_catalyst = tct_papal_hre_opinions_bad }
				opinion = {
					target = title:k_papal_state.holder
					value <= 0
				}
			}
			title:k_papal_state.holder = {
				opinion = {
					target = title:e_hre.holder
					value <= 0
				}
			}
		}
		title:e_hre.holder = {
			every_character_struggle = {
				activate_struggle_catalyst = {
					catalyst = tct_papal_hre_opinions_bad
					character = title:e_hre.holder
				}
			}
		}
	}
	if = {
		limit = {
			title:e_hre.holder = {
				any_character_struggle = { phase_has_catalyst = tct_papal_hre_opinions_good }
				opinion = {
					target = title:k_papal_state.holder
					value >= 0
				}
			}
			title:k_papal_state.holder = {
				opinion = {
					target = title:e_hre.holder
					value >= 0
				}
			}
		}
		title:e_hre.holder = {
			every_character_struggle = {
				activate_struggle_catalyst = {
					catalyst = tct_papal_hre_opinions_good
					character = title:e_hre.holder
				}
			}
		}
	}
}